import { FunctionAny } from './internals/types';
/**
 * 创建一个调用 `func` 的函数，调用次数少于 `n` 次。之后再调用这个函数，将返回最后一次调用 `func` 的结果。
 *
 * @alias module:Function.before
 * @since 1.0.0
 * @param {number} n 不再调用 `func` 的次数。
 * @param {Function} func 限制执行的函数。
 * @returns {Function} 新的限定函数。
 * @example
 *
 * let count = 0;
 *
 * const increment = before(3, () => {
 *   return ++count;
 * });
 *
 * increment(); // 1
 * increment(); // 2
 * increment(); // 2 返回之前的结果
 *
 */
declare function before<T extends FunctionAny>(n: number, func: T): T;
export default before;
