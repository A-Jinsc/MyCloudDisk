import { symbolProto, nativeUndefined } from './internals/native.js';
import isArray from './isArray.js';
import isNil from './isNil.js';
import isSymbol from './isSymbol.js';

var symbolToString = symbolProto ? symbolProto.toString : nativeUndefined;
function baseToString(value) {
    if (typeof value === 'string') {
        return value;
    }
    if (isArray(value)) {
        return '' + value.map(baseToString);
    }
    if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
    }
    var result = '' + value;
    return result === '0' && 1 / value === -Infinity ? '-0' : result;
}
function toString(value) {
    return isNil(value) ? '' : baseToString(value);
}

export { toString as default };
