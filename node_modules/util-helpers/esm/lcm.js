import { __spreadArray, __read } from 'tslib';
import divide from './divide.js';
import times from './times.js';
import gcd from './gcd.js';
import { round } from 'ut2';

function lcm() {
    var nums = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nums[_i] = arguments[_i];
    }
    var args = nums.map(function (item) { return Math.abs(round(item)); });
    if (args.length === 1) {
        args = args.concat([1]);
    }
    var product = args.indexOf(0) > -1 ? 0 : times.apply(void 0, __spreadArray([], __read(args), false));
    return divide(product, gcd.apply(void 0, __spreadArray([], __read(args), false)));
}

export { lcm as default };
