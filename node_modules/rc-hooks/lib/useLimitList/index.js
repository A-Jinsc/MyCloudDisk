"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = require("react");
var ut2_1 = require("ut2");
/**
 * 管理列表展示数量的 Hook。
 *
 * @param {Array} list 列表数据。
 * @param {Object} [options] 配置项。
 * @param {number} [options.count=3] 默认限制列表数量。默认 `3`。
 * @param {boolean} [options.defaultLimited=true] 默认是否限制列表数据。默认 `true`。
 * @returns
 * @example
 * const { data, limited, canLimit, toggle } = useLimitList(list);
 */
function useLimitList(list, options) {
    if (list === void 0) { list = []; }
    if (options === void 0) { options = {}; }
    var _a = options || {}, _b = _a.count, count = _b === void 0 ? 3 : _b, _c = _a.defaultLimited, defaultLimited = _c === void 0 ? true : _c;
    var limitedRef = (0, react_1.useRef)(defaultLimited);
    var safeList = (0, react_1.useMemo)(function () { return ((0, ut2_1.isArray)(list) ? list : []); }, [list]);
    var safeCount = (0, react_1.useMemo)(function () { return (count > 0 ? Math.ceil(count) : 0); }, [count]);
    // 是否可以限制数量
    var canLimit = (0, react_1.useMemo)(function () { return safeList.length > safeCount; }, [safeCount, safeList.length]);
    // 限制后的值
    var _d = tslib_1.__read((0, react_1.useState)(function () {
        if (canLimit && defaultLimited) {
            return safeList.slice(0, safeCount);
        }
        return safeList;
    }), 2), data = _d[0], setData = _d[1];
    // 切换限制/不限制数量
    var toggle = function () {
        if (canLimit) {
            limitedRef.current = !limitedRef.current;
        }
        setData(limitedRef.current ? safeList.slice(0, safeCount) : safeList);
    };
    // 修改 list 或 count 后，触发更新
    (0, react_1.useEffect)(function () {
        setData(limitedRef.current ? safeList.slice(0, safeCount) : safeList);
    }, [safeCount, safeList]);
    return {
        /**
         * 是否可以限制列表数量。当列表数量小于等于 `count` 时，为 `false`。
         */
        canLimit: canLimit,
        /**
         * 当前是否限制列表数据。
         */
        limited: limitedRef.current,
        /**
         * 列表数据。
         */
        data: data,
        /**
         * 切换限制列表数据。
         */
        toggle: toggle
    };
}
exports.default = useLimitList;
