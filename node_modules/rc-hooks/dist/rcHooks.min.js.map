{"version":3,"file":"rcHooks.min.js","sources":["../node_modules/.pnpm/@rollup+plugin-typescript@11.1.6_rollup@4.27.4_tslib@2.8.1_typescript@5.7.2/node_modules/tslib/tslib.es6.js","../node_modules/.pnpm/ut2@1.14.0/node_modules/ut2/es/internals/native.js","../node_modules/.pnpm/ut2@1.14.0/node_modules/ut2/es/isArray.js","../node_modules/.pnpm/ut2@1.14.0/node_modules/ut2/es/isObjectLike.js","../node_modules/.pnpm/ut2@1.14.0/node_modules/ut2/es/internals/getTag.js","../node_modules/.pnpm/ut2@1.14.0/node_modules/ut2/es/toNumber.js","../node_modules/.pnpm/ut2@1.14.0/node_modules/ut2/es/isSymbol.js","../node_modules/.pnpm/ut2@1.14.0/node_modules/ut2/es/isObject.js","../node_modules/.pnpm/ut2@1.14.0/node_modules/ut2/es/defaultTo.js","../node_modules/.pnpm/ut2@1.14.0/node_modules/ut2/es/internals/helpers.js","../node_modules/.pnpm/ut2@1.14.0/node_modules/ut2/es/internals/baseDebounce.js","../node_modules/.pnpm/ut2@1.14.0/node_modules/ut2/es/debounce.js","../node_modules/.pnpm/ut2@1.14.0/node_modules/ut2/es/throttle.js","../node_modules/.pnpm/ut2@1.14.0/node_modules/ut2/es/isWindow.js","../node_modules/.pnpm/ut2@1.14.0/node_modules/ut2/es/castArray.js","../node_modules/.pnpm/ut2@1.14.0/node_modules/ut2/es/noop.js","../node_modules/.pnpm/ut2@1.14.0/node_modules/ut2/es/uniqueId.js","../src/useLatest/index.ts","../src/usePersistFn/index.ts","../src/useUpdateEffect/index.ts","../node_modules/.pnpm/emitter-pro@1.2.2/node_modules/emitter-pro/dist/emitter-pro.esm.js","../node_modules/.pnpm/cache2@3.1.2/node_modules/cache2/dist/cache2.esm.js","../node_modules/.pnpm/util-helpers@5.3.1/node_modules/util-helpers/esm/AsyncMemo.js","../node_modules/.pnpm/ut2@1.14.0/node_modules/ut2/es/isString.js","../src/utils/index.ts","../src/utils/windowVisible.ts","../src/utils/windowFocus.ts","../src/useAsync/Async.ts","../src/utils/limit.ts","../src/useAsync/index.ts","../src/useAsync/useScrollToLower.ts","../src/utils/dom.ts","../src/useUnmount/index.ts","../src/useDebounceFn/index.ts","../src/useThrottleFn/index.ts","../src/useMountedRef/index.ts","../src/useUnmountedRef/index.ts","../src/useSafeState/index.ts","../src/utils/getRef.ts","../src/useSize/ResizeObserver.ts","../src/useClickAway/index.ts","../src/useControllableValue/index.ts","../src/useDebounce/index.ts","../src/useLimitList/index.ts","../src/useAsync/useLoadMore.ts","../src/useMount/index.ts","../src/useAsync/usePagination.ts","../src/usePrevious/index.ts","../src/useSetState/index.ts","../src/useSize/index.ts","../src/useThrottle/index.ts","../src/useUpdate/index.ts","../src/useUpdateLayoutEffect/index.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n    ownKeys = Object.getOwnPropertyNames || function (o) {\r\n        var ar = [];\r\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n        return ar;\r\n    };\r\n    return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\r\n","var nativeUndefined = void 0;\nvar stringUndefined = 'undefined';\nvar stringObject = 'object';\nvar objectProto = Object.prototype;\nvar objectProtoToString = objectProto.toString;\nvar objectProtoHasOwnProperty = objectProto.hasOwnProperty;\nvar objectProtoPropertyIsEnumerable = objectProto.propertyIsEnumerable;\nvar objectGetOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar objectGetPrototypeOf = Object.getPrototypeOf;\nvar objectKeys = Object.keys;\nvar functionProto = Function.prototype;\nvar functionProtoToString = functionProto.toString;\nvar symbolExisted = typeof Symbol !== stringUndefined;\nvar symbolProto = symbolExisted ? Symbol.prototype : nativeUndefined;\nvar arrayProto = Array.prototype;\nvar arrayProtoSlice = arrayProto.slice;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathRandom = Math.random;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathAbs = Math.abs;\nvar numberIsFinite = Number.isFinite;\nvar numberIsInteger = Number.isInteger;\nvar numberIsSafeInteger = Number.isSafeInteger;\nvar globalThisExisted = typeof globalThis === stringObject && globalThis;\nvar globalExisted = typeof global === stringObject && global;\nvar selfExisted = typeof self === stringObject && self;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_ARRAY_LENGTH = 4294967295;\nvar bigIntTag = '[object BigInt]';\nvar numberTag = '[object Number]';\nvar booleanTag = '[object Boolean]';\nvar stringTag = '[object String]';\nvar dateTag = '[object Date]';\nvar regExpTag = '[object RegExp]';\nvar symbolTag = '[object Symbol]';\nvar errorTag = '[object Error]';\nvar arrayBufferTag = '[object ArrayBuffer]';\nvar argumentsTag = '[object Arguments]';\nvar arrayTag = '[object Array]';\nvar functionTags = ['Function', 'AsyncFunction', 'GeneratorFunction', 'Proxy'].map(function (item) { return '[object ' + item + ']'; });\nvar weakSetTag = '[object WeakSet]';\nvar blobTag = '[object Blob]';\nvar fileTag = '[object File]';\nvar domExceptionTag = '[object DOMException]';\nvar objectTag = '[object Object]';\nvar dataViewTag = '[object DataView]';\nvar mapTag = '[object Map]';\nvar promiseTag = '[object Promise]';\nvar setTag = '[object Set]';\nvar weakMapTag = '[object WeakMap]';\nvar windowTag = '[object Window]';\n\nexport { MAX_ARRAY_LENGTH, MAX_SAFE_INTEGER, MIN_SAFE_INTEGER, argumentsTag, arrayBufferTag, arrayProto, arrayProtoSlice, arrayTag, bigIntTag, blobTag, booleanTag, dataViewTag, dateTag, domExceptionTag, errorTag, fileTag, functionProto, functionProtoToString, functionTags, globalExisted, globalThisExisted, mapTag, mathAbs, mathCeil, mathFloor, mathMax, mathMin, mathRandom, nativeUndefined, numberIsFinite, numberIsInteger, numberIsSafeInteger, numberTag, objectGetOwnPropertySymbols, objectGetPrototypeOf, objectKeys, objectProto, objectProtoHasOwnProperty, objectProtoPropertyIsEnumerable, objectProtoToString, objectTag, promiseTag, regExpTag, selfExisted, setTag, stringObject, stringTag, stringUndefined, symbolProto, symbolTag, weakMapTag, weakSetTag, windowTag };\n","function isArray(value) {\n    return Array.isArray(value);\n}\n\nexport { isArray as default };\n","function isObjectLike(value) {\n    return value !== null && typeof value === 'object';\n}\n\nexport { isObjectLike as default };\n","import { objectProtoToString } from './native.js';\n\nfunction getTag(value) {\n    return objectProtoToString.call(value);\n}\n\nexport { getTag as default };\n","import isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\nvar reIsBinary = /^0b[01]+$/i;\nvar reIsOctal = /^0o[0-7]+$/i;\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\nfunction toNumber(value) {\n    if (typeof value === 'number') {\n        return value;\n    }\n    if (isSymbol(value)) {\n        return NaN;\n    }\n    if (isObject(value)) {\n        value = Number(value);\n    }\n    if (typeof value !== 'string') {\n        return value === 0 ? value : +value;\n    }\n    value = value.trim();\n    var isBinary = reIsBinary.test(value);\n    return isBinary || reIsOctal.test(value) ? parseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NaN : +value;\n}\n\nexport { toNumber as default };\n","import getTag from './internals/getTag.js';\nimport { symbolTag } from './internals/native.js';\n\nfunction isSymbol(value) {\n    return typeof value === 'symbol' || getTag(value) === symbolTag;\n}\n\nexport { isSymbol as default };\n","import isObjectLike from './isObjectLike.js';\n\nfunction isObject(value) {\n    return typeof value === 'function' || isObjectLike(value);\n}\n\nexport { isObject as default };\n","var defaultTo = function (value, defaultValue) {\n    return value == null || value !== value ? defaultValue : value;\n};\n\nexport { defaultTo as default };\n","import isObjectLike from '../isObjectLike.js';\nimport getTag from './getTag.js';\nimport { argumentsTag, stringUndefined, functionProtoToString } from './native.js';\n\nvar VERSION = \"1.14.0\";\nvar isBrowser = typeof window !== stringUndefined && isObjectLike(window) && typeof document !== stringUndefined && isObjectLike(document) && window.document === document;\nvar supportedArgumentsType = getTag((function () { return arguments; })()) === argumentsTag;\nvar FUNC_ERROR_TEXT = 'Expected a function';\nfunction toSource(func) {\n    if (func !== null) {\n        try {\n            return functionProtoToString.call(func);\n        }\n        catch (e) {\n        }\n        try {\n            return func + '';\n        }\n        catch (e) {\n        }\n    }\n    return '';\n}\nvar stubFlase = function () { return false; };\nvar stubTrue = function () { return true; };\n\nexport { FUNC_ERROR_TEXT, VERSION, isBrowser, stubFlase, stubTrue, supportedArgumentsType, toSource };\n","import defaultTo from '../defaultTo.js';\nimport toNumber from '../toNumber.js';\nimport { FUNC_ERROR_TEXT } from './helpers.js';\nimport { nativeUndefined } from './native.js';\n\nfunction baseDebounce(func, wait, immediate, __throttle__) {\n    if (__throttle__ === void 0) { __throttle__ = false; }\n    if (typeof func !== 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    var timer, lastCallTime, lastInvokeTime, lastArgs, lastThis, result;\n    wait = defaultTo(toNumber(wait), 0);\n    function shouldInvoke(time) {\n        if (lastCallTime === nativeUndefined) {\n            return true;\n        }\n        var timeSinceLastCall = time - lastCallTime;\n        var timeSinceLastInvoke = time - lastInvokeTime;\n        return timeSinceLastCall >= wait || timeSinceLastCall < 0 || (__throttle__ && timeSinceLastInvoke >= wait);\n    }\n    function invokeFunc(time) {\n        lastInvokeTime = time;\n        result = func.apply(lastThis, lastArgs);\n        lastThis = lastArgs = nativeUndefined;\n        return result;\n    }\n    function debounced() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        lastThis = this;\n        lastArgs = args;\n        var time = Date.now();\n        var isInvoke = shouldInvoke(time);\n        var waitTime = !__throttle__ ? wait : !isInvoke && lastCallTime !== nativeUndefined && timer === nativeUndefined ? wait - (time - lastCallTime) : wait;\n        lastCallTime = time;\n        if (isInvoke) {\n            if (immediate && timer === nativeUndefined) {\n                return invokeFunc(time);\n            }\n        }\n        if (timer !== nativeUndefined && !__throttle__) {\n            clearTimeout(timer);\n            timer = nativeUndefined;\n        }\n        if (timer === nativeUndefined) {\n            timer = setTimeout(function () {\n                timer = nativeUndefined;\n                invokeFunc(Date.now());\n            }, waitTime);\n        }\n        return result;\n    }\n    function cancel() {\n        if (timer !== nativeUndefined) {\n            clearTimeout(timer);\n            timer = nativeUndefined;\n        }\n        lastCallTime = timer = lastArgs = lastThis = nativeUndefined;\n    }\n    function flush() {\n        if (timer !== nativeUndefined) {\n            clearTimeout(timer);\n            timer = nativeUndefined;\n            if (lastArgs) {\n                return invokeFunc(Date.now());\n            }\n        }\n        return result;\n    }\n    function pending() {\n        return timer !== nativeUndefined;\n    }\n    debounced.cancel = cancel;\n    debounced.flush = flush;\n    debounced.pending = pending;\n    return debounced;\n}\n\nexport { baseDebounce as default };\n","import baseDebounce from './internals/baseDebounce.js';\n\nfunction debounce(func, wait, immediate) {\n    if (wait === void 0) { wait = 0; }\n    if (immediate === void 0) { immediate = false; }\n    return baseDebounce(func, wait, immediate);\n}\n\nexport { debounce as default };\n","import baseDebounce from './internals/baseDebounce.js';\n\nfunction throttle(func, wait, immediate) {\n    if (wait === void 0) { wait = 0; }\n    if (immediate === void 0) { immediate = true; }\n    return baseDebounce(func, wait, immediate, true);\n}\n\nexport { throttle as default };\n","import getTag from './internals/getTag.js';\nimport { windowTag } from './internals/native.js';\nimport isObjectLike from './isObjectLike.js';\n\nfunction isWindow(value) {\n    return isObjectLike(value) && getTag(value) === windowTag;\n}\n\nexport { isWindow as default };\n","import isArray from './isArray.js';\n\nfunction castArray(value) {\n    if (!arguments.length) {\n        return [];\n    }\n    return isArray(value) ? value : [value];\n}\n\nexport { castArray as default };\n","function noop() { }\n\nexport { noop as default };\n","import { mathRandom } from './internals/native.js';\n\nvar idCounter = 0;\nvar defaultPrefix = '_' + mathRandom().toString(36).substring(2, 4);\nfunction uniqueId(prefix) {\n    if (prefix === void 0) { prefix = defaultPrefix; }\n    return '' + prefix + ++idCounter;\n}\n\nexport { uniqueId as default };\n","import { useRef } from 'react';\n\n/**\n * 返回最新的 state 或 props 。\n *\n * @param value state 或 props 的值。\n * @returns\n * @example\n * const [count, setCount] = React.useState(0);\n * // 最新的 count 值。可以在其他 hook 中使用，而不需要依赖它触发更新。\n * const latestCount = useLatest(count);\n */\nfunction useLatest<T = any>(value: T) {\n  const ref = useRef(value);\n  ref.current = value;\n  return ref;\n}\n\nexport default useLatest;\n","import { useCallback } from 'react';\nimport useLatest from '../useLatest';\n\n/**\n * 持久化 function 的 Hook。\n *\n * @see {@link https://zh-hans.reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback | 如何从 useCallback 读取一个经常变化的值？}\n * @param fn 需要持久化的函数。\n * @returns 引用地址永远不会变化的 `fn`。\n * @example\n * const [text, updateText] = useState('');\n *\n * // 该函数不会变化\n * const handleSubmit = usePersistFn(() => {\n *   // 可以获取到最新的 state\n *   alert(text);\n * });\n */\nfunction usePersistFn<T extends (...args: any[]) => any>(fn: T): T extends infer R ? R : T {\n  const ref = useLatest<T>(fn);\n\n  const persistFn = useCallback(\n    (...args: any[]) => {\n      const refFn = ref.current;\n      return refFn?.apply(void 0, args);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  return persistFn as any;\n}\n\nexport default usePersistFn;\n","import { useEffect, useRef } from 'react';\n\n/**\n * 只在依赖更新时执行的 useEffect Hook。\n *\n * @param {Function} effect 可执行函数。\n * @param {Array} [deps] 可选项，传入依赖变化的对象。\n * @example\n * const [count, setCount] = useState(0);\n *\n * useUpdateEffect(() => {\n *   // 初次加载不触发，再更新后触发\n *   // do something\n *\n *   return () => {\n *     // 卸载时触发\n *   };\n * }, [count]);\n */\nconst useUpdateEffect: typeof useEffect = (effect, deps) => {\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    if (!isMounted.current) {\n      isMounted.current = true;\n    } else {\n      return effect();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useUpdateEffect;\n","/**\n * 事件触发器，支持浏览器端和 node 端。\n *\n * @class\n * @example\n *\n * const emitter = new Emitter();\n *\n * // 注册监听方法\n * emitter.on('foo', () => console.log('foo 1'));\n * emitter.on('foo', () => console.log('foo 2'));\n *\n * // 触发方法\n * emitter.emit('foo');\n * // foo 1\n * // foo 2\n *\n * // 取消监听方法\n * emitter.off('foo');\n *\n * // 支持链式调用\n * emitter.on('foo', () => {})\n *  .on('foo', () => {})\n *  .off('foo');\n */\nvar EmitterPro = /** @class */ (function () {\n    function EmitterPro() {\n        this.handlers = {};\n    }\n    /**\n     * 获取全部事件名称。\n     *\n     * @returns 事件名称数组。\n     * @example\n     * emitter.on('foo', () => {});\n     * emitter.on('bar', () => {});\n     *\n     * emitter.eventNames(); // ['foo', 'bar']\n     */\n    EmitterPro.prototype.eventNames = function () {\n        var _a;\n        var symbols = ((_a = Object.getOwnPropertySymbols) === null || _a === void 0 ? void 0 : _a.call(Object, this.handlers)) || [];\n        var keys = Object.keys(this.handlers);\n        return keys.concat(symbols);\n    };\n    /**\n     * 获取事件名称的全部监听方法（原始方法，未经过包装处理）。\n     *\n     * @param eventName 事件名称\n     * @returns 对应事件名称的监听方法数组\n     * @example\n     * const fn1 = () => console.log('bar');\n     * const fn2 = () => console.log('baz');\n     *\n     * emitter.on('test', fn1);\n     * emitter.once('test', fn2);\n     *\n     * emitter.rawListeners('test'); // [fn1, fn2]\n     */\n    EmitterPro.prototype.rawListeners = function (eventName) {\n        var handler = this.handlers[eventName];\n        return handler ? handler.map(function (item) { return item.raw; }) : [];\n    };\n    /**\n     * 获取事件名称的全部监听方法（如通过 `once` 方法注册，返回的是包装方法）。\n     *\n     * @param eventName 事件名称\n     * @returns 对应事件名称的监听方法数组\n     * @example\n     * const fn1 = () => console.log('bar');\n     * const fn2 = () => console.log('baz');\n     *\n     * emitter.on('test', fn1);\n     * emitter.once('test', fn2);\n     *\n     * emitter.rawListeners('test'); // [fn1, wrapFn2]\n     */\n    EmitterPro.prototype.listeners = function (eventName) {\n        var handler = this.handlers[eventName];\n        return handler ? handler.map(function (item) { return item.wrap; }) : [];\n    };\n    /**\n     * 判断事件名称对应的监听方法是否存在。\n     *\n     * @param eventName 事件名称\n     * @param listener 监听方法\n     * @returns 如果事件名称存在该事件方法返回 `true`，否则返回 `false`。\n     * @example\n     * const fn1 = () => console.log('bar');\n     * const fn2 = () => console.log('baz');\n     *\n     * emitter.on('test', fn1);\n     * emitter.once('test', fn2);\n     *\n     * emitter.hasListener('test', fn1); // true\n     * emitter.hasListener('test', fn2); // true\n     *\n     * // fn2 是通过 once 方法注册，执行一次后自动解绑\n     * emitter.emit('test');\n     *\n     * emitter.hasListener('test', fn1); // true\n     * emitter.hasListener('test', fn2); // false\n     */\n    EmitterPro.prototype.hasListener = function (eventName, listener) {\n        return this.rawListeners(eventName).some(function (item) { return item === listener; });\n    };\n    EmitterPro.prototype._on = function (eventName, raw, wrap, context, dir) {\n        if (context === void 0) { context = null; }\n        if (dir === void 0) { dir = 1; }\n        var currentListener = { raw: raw, wrap: wrap, context: context };\n        if (!this.handlers[eventName]) {\n            this.handlers[eventName] = [currentListener];\n        }\n        else {\n            var appendMethod = dir === 1 ? 'push' : 'unshift';\n            this.handlers[eventName][appendMethod](currentListener);\n        }\n        return this;\n    };\n    /**\n     * 注册监听方法。同 `on` 方法，只是将监听方法添加到最前面（事件触发是按顺序执行）。\n     *\n     * @param eventName 事件名称\n     * @param listener 监听方法\n     * @param context 执行上下文\n     * @returns 事件触发器实例。\n     * @example\n     * emitter.on('foo', () => console.log('bar'));\n     * emitter.prependListener('foo', () => console.log(42));\n     *\n     * emitter.emit('foo');\n     * // 42\n     * // bar\n     */\n    EmitterPro.prototype.prependListener = function (eventName, listener, context) {\n        return this._on(eventName, listener, listener, context, 0);\n    };\n    /**\n     * 注册监听方法。允许多次添加同一引用的函数。\n     *\n     * @param eventName 事件名称\n     * @param listener 监听方法\n     * @param context 执行上下文\n     * @returns 事件触发器实例。\n     * @example\n     * emitter.on('foo', () => console.log('bar'));\n     * emitter.on('foo', () => console.log(42));\n     *\n     * emitter.emit('foo');\n     * // bar\n     * // 42\n     */\n    EmitterPro.prototype.on = function (eventName, listener, context) {\n        return this._on(eventName, listener, listener, context);\n    };\n    EmitterPro.prototype._wrapOnce = function (eventName, listener, context) {\n        var _this = this;\n        if (context === void 0) { context = null; }\n        var wrap = (function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            listener.apply(context, args);\n            _this.off(eventName, wrap);\n        });\n        return wrap;\n    };\n    /**\n     * 仅触发一次的监听方法。使用方法同 `on` 。\n     *\n     * @param eventName 事件名称\n     * @param listener 监听方法\n     * @param context 执行上下文\n     * @returns 事件触发器实例。\n     * @example\n     * emitter.on('foo', () => console.log('bar'));\n     * emitter.once('foo', () => console.log(42));\n     *\n     * emitter.emit('foo');\n     * // bar\n     * // 42\n     *\n     * emitter.emit('foo');\n     * // bar\n     */\n    EmitterPro.prototype.once = function (eventName, listener, context) {\n        var wrap = this._wrapOnce(eventName, listener, context);\n        return this._on(eventName, listener, wrap, context);\n    };\n    /**\n     * 仅触发一次的监听方法。同 `once` 方法，只是添加到最前面（事件触发是按顺序执行）。\n     *\n     * @param eventName 事件名称\n     * @param listener 监听方法\n     * @param context 执行上下文\n     * @returns 事件触发器实例。\n     * @example\n     * emitter.on('foo', () => console.log('bar'));\n     * emitter.prependOnceListener('foo', () => console.log(42));\n     *\n     * emitter.emit('foo');\n     * // 42\n     * // bar\n     *\n     * emitter.emit('foo');\n     * // bar\n     */\n    EmitterPro.prototype.prependOnceListener = function (eventName, listener, context) {\n        var wrap = this._wrapOnce(eventName, listener, context);\n        return this._on(eventName, listener, wrap, context, 0);\n    };\n    /**\n     * 取消监听方法。如果不传第二个参数，将取消该事件名称的全部监听方法。如果多次添加同一引用的函数，需要多次删除。\n     *\n     * @param eventName 事件名称\n     * @param listener 监听方法\n     * @returns 事件触发器实例。\n     * @example\n     * const fn = () => console.log('bar');\n     * emitter.on('foo', fn);\n     * emitter.on('foo', () => console.log('baz'));\n     * emitter.on('foo', () => console.log(42));\n     *\n     * emitter.emit('foo');\n     * // bar\n     * // baz\n     * // 42\n     *\n     * emitter.off('foo', fn); // 取消 foo 的监听方法 fn\n     *\n     * emitter.emit('foo');\n     * // bar\n     * // 42\n     *\n     * emitter.off('foo'); // 取消 foo 的全部监听方法\n     * emitter.emit('foo'); // 什么都没发生\n     */\n    EmitterPro.prototype.off = function (eventName, listener) {\n        var handler = this.handlers[eventName];\n        if (handler) {\n            if (listener) {\n                var index = handler.findIndex(function (item) { return item.wrap === listener || item.raw === listener; });\n                if (index !== -1) {\n                    handler.splice(index, 1);\n                }\n            }\n            else {\n                delete this.handlers[eventName];\n            }\n        }\n        return this;\n    };\n    /**\n     * 取消全部事件名称的监听方法。\n     *\n     * @returns 事件触发器实例。\n     * @example\n     * const fn = () => console.log('bar');\n     * emitter.on('test', fn);\n     * emitter.on('test', () => console.log('baz'));\n     * emitter.on('test', () => console.log(42));\n     *\n     * emitter.on('other', fn);\n     * emitter.on('other', () => console.log('baz'));\n     *\n     * emitter.emit('test');\n     * // bar\n     * // baz\n     * // 42\n     *\n     * emitter.emit('other');\n     * // bar\n     * // baz\n     *\n     * emitter.offAll(); // 取消全部监听方法\n     *\n     * emitter.emit('test'); // 什么都没发生\n     * emitter.emit('other'); // 什么都没发生\n     */\n    EmitterPro.prototype.offAll = function () {\n        this.handlers = {};\n        return this;\n    };\n    /**\n     * 触发监听方法。\n     *\n     * @param eventName 事件名称\n     * @param args 触发监听方法的参数（从第二个参数开始都将传给监听方法）\n     * @returns 如果触发成功返回 `true`，否则返回 `false`。\n     * @example\n     * emitter.on('foo', () => console.log('bar'));\n     * emitter.on('foo', () => console.log(42));\n     *\n     * emitter.emit('foo');\n     * // bar\n     * // 42\n     *\n     * // 支持传入参数\n     * emitter.on('test' (a, b) => console.log(a + b));\n     * emitter.on('test' (a, b) => console.log(a * b));\n     *\n     * emitter.emit('other', 2, 5);\n     * // 7\n     * // 10\n     *\n     * emitter.emit('other', 5, 5);\n     * // 10\n     * // 25\n     */\n    EmitterPro.prototype.emit = function (eventName) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var handler = this.handlers[eventName];\n        if (handler && handler.length > 0) {\n            handler.forEach(function (listener) {\n                listener.wrap.apply(listener.context, args);\n            });\n            return true;\n        }\n        return false;\n    };\n    return EmitterPro;\n}());\n\nexport { EmitterPro as default };\n","import { __assign, __extends } from 'tslib';\nimport Emitter from 'emitter-pro';\n\nvar cache = {};\nvar MemoryStorage = /** @class */ (function () {\n    function MemoryStorage(scope) {\n        if (scope === void 0) { scope = 'default'; }\n        this.scope = scope;\n        if (!cache[this.scope]) {\n            cache[this.scope] = {};\n        }\n        this.data = cache[this.scope];\n    }\n    MemoryStorage.prototype.getItem = function (key) {\n        return key in this.data ? this.data[key] : null;\n    };\n    MemoryStorage.prototype.setItem = function (key, value) {\n        this.data[key] = value;\n    };\n    MemoryStorage.prototype.removeItem = function (key) {\n        delete this.data[key];\n    };\n    MemoryStorage.prototype.clear = function () {\n        cache[this.scope] = {};\n        this.data = cache[this.scope];\n    };\n    return MemoryStorage;\n}());\n\n// 随机字符串\nfunction randomString() {\n    return Math.random().toString(16).substring(2, 8);\n}\n// 是否支持 storage\nfunction isStorageSupported(storage) {\n    try {\n        var isSupport = typeof storage === 'object' &&\n            storage !== null &&\n            !!storage.setItem &&\n            !!storage.getItem &&\n            !!storage.removeItem;\n        if (isSupport) {\n            var key = randomString() + new Date().getTime();\n            var value = '1';\n            storage.setItem(key, value);\n            if (storage.getItem(key) !== value) {\n                return false;\n            }\n            storage.removeItem(key);\n        }\n        return isSupport;\n    }\n    catch (e) {\n        console.error(\"[cache2] \".concat(storage, \" is not supported. The default memory cache will be used.\"));\n        return false;\n    }\n}\nfunction parse(value, reviver) {\n    try {\n        return JSON.parse(value, reviver);\n    }\n    catch (e) {\n        return value;\n    }\n}\nfunction stringify(value, replacer) {\n    return JSON.stringify(value, replacer);\n}\n\n/**\n * 数据存储管理。\n *\n * @class\n * @param {Object} [storage] 自定义缓存对象要包含 `getItem` `setItem` `removeItem` 方法。默认使用内存缓存。\n * @param {Object} [options] 配置项。可选。\n * @param {boolean} [options.needParsed] 存取数据时是否需要序列化和解析数据。如果使用内置的内存缓存，默认 `false`，如果自定义 `storage` 默认 `true`。\n * @param {Function} [options.replacer] 数据存储时序列化的参数，透传给 [JSON.stringify](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) 的 `replacer` 参数。仅在 `needParsed=true` 时生效。\n * @param {Function} [options.reviver] 数据获取时转换的参数，透传给 [JSON.parse](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse) 的 `reviver` 参数。仅在 `needParsed=true` 时生效。\n * @param {string} [options.prefix] 缓存键前缀。便于管理同域名下的不同项目缓存。\n * @example\n * // 使用内存缓存\n * const memory = new Storage();\n * memory.set('foo', { baz: 42 });\n * memory.get('foo');\n * // { baz: 42 }\n *\n * // 自定义缓存 sessionStorage 。\n * const session = new Storage(window.sessionStorage);\n * session.set('foo', { a: 1, b: ['bar'], c: ['x', 2, 3] });\n * session.get('foo');\n * // { a: 1, b: ['bar'], c: ['x', 2, 3] }\n *\n * session.del('foo'); // 删除缓存\n * session.get('foo');\n * // null\n *\n * // 使用缓存键前缀。\n * // 如果要使用内存缓存， storage 传 `undefined`。\n * const local = new Storage(window.localStorage, { prefix: 'project_name' });\n * local.set('foo', { baz: 42 });\n * local.get('foo');\n * // { baz: 42 }\n */\nvar Storage = /** @class */ (function () {\n    function Storage(storage, options) {\n        if (options === void 0) { options = {}; }\n        var isSupported = storage ? isStorageSupported(storage) : false;\n        this.options = __assign({ needParsed: isSupported, prefix: '' }, options);\n        this.storage = isSupported ? storage : new MemoryStorage(this.options.memoryScope);\n    }\n    /**\n     * 内部用于获取存储的键名称。\n     *\n     * 如果实例有设置 `prefix`，返回 `prefix + key`。\n     *\n     * @protected\n     * @param key 原键名称\n     * @returns 存储的键名称\n     */\n    Storage.prototype.getKey = function (key) {\n        return this.options.prefix + key;\n    };\n    /**\n     * 获取存储的数据。\n     *\n     * @param {string} key 键名称。\n     * @returns 如果键值存在返回键值，否则返回 `null`。\n     * @example\n     * const local = new Storage(window.localStorage);\n     * local.set('foo', { baz: 42 });\n     * local.get('foo');\n     * // { baz: 42 }\n     */\n    Storage.prototype.get = function (key) {\n        var value = this.storage.getItem(this.getKey(key));\n        return this.options.needParsed ? parse(value, this.options.reviver) : value;\n    };\n    /**\n     * 存储数据。\n     *\n     * @param key 键名称。\n     * @param value 键值。\n     * @example\n     * const local = new Storage(window.localStorage);\n     * local.set('foo', { baz: 42 });\n     * local.get('foo');\n     * // { baz: 42 }\n     */\n    Storage.prototype.set = function (key, value) {\n        this.storage.setItem(this.getKey(key), this.options.needParsed ? stringify(value, this.options.replacer) : value);\n    };\n    /**\n     * 删除存储的数据。\n     *\n     * @param key 键名称。\n     * @example\n     * const local = new Storage(window.localStorage);\n     * local.set('foo', { baz: 42 });\n     * local.get('foo');\n     * // { baz: 42 }\n     *\n     * local.del('foo');\n     * local.get('foo');\n     * // null\n     */\n    Storage.prototype.del = function (key) {\n        this.storage.removeItem(this.getKey(key));\n    };\n    /**\n     * 清除存储的所有键。\n     *\n     * 注意：该方法调用 `storage.clear()`，可能会将同域下的不同实例的所有键都清除。如果要避免这种情况，建议使用 `import { Cache } 'cache2'`。\n     *\n     * @example\n     * const local = new Storage(window.localStorage);\n     * local.set('foo', { baz: 42 });\n     * local.get('foo');\n     * // { baz: 42 }\n     *\n     * local.clear();\n     * local.get('foo');\n     * // null\n     */\n    Storage.prototype.clear = function () {\n        if (typeof this.storage.clear === 'function') {\n            this.storage.clear();\n        }\n    };\n    return Storage;\n}());\n\n// 命名空间缓存键前缀。\nvar defaultPrefix = 'cache2_';\nvar defaultNamespace = 'default';\n/**\n * 功能丰富的数据存储管理，支持 `自定义缓存` `命名空间` `数据过期时间` `限制缓存数量` `自定义事件`。\n *\n * 注意：如果你需要的是简单的基本数据存储管理，例如浏览器存储，建议使用 `import { Storage } from 'cache2'`。\n *\n * @class\n * @param {string} [namespace] 命名空间。可选。\n * @param {Object} [options] 配置项。可选。\n * @param {Object} [options.storage] 自定义缓存对象要包含 `getItem` `setItem` `removeItem` 方法。默认使用内置的内存缓存。\n * @param {number} [options.max=-1] 最大缓存数据数量。`-1` 表示无限制。默认 `-1`。\n * @param {'limited' | 'replaced'} [options.maxStrategy='limited'] 当达到最大缓存数量限制时的缓存策略。`limited` 表示达到限制数量后不存入数据，保存时返回 `false`。`replaced` 表示优先替换快过期的数据，如果都是一样的过期时间(0)，按照先入先出规则处理，保存时始终返回 `true`。默认 `limited`。\n * @param {number} [options.stdTTL=0] 相对当前时间的数据存活时间，应用于当前实例的所有缓存数据。单位为毫秒，`0` 表示无期限。默认 `0`。\n * @param {number} [options.checkperiod=0] 定时检查过期数据，单位毫秒。如果小于等于 `0` 表示不启动定时器检查。默认 `0`。\n * @param {boolean} [options.needParsed] 存取数据时是否需要序列化和解析数据。如果使用内置的内存缓存，默认 `false`，如果自定义 `storage` 默认 `true`。\n * @param {Function} [options.replacer] 数据存储时序列化的参数，透传给 [JSON.stringify](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) 的 `replacer` 参数。仅在 `needParsed=true` 时生效。\n * @param {Function} [options.reviver] 数据获取时转换的参数，透传给 [JSON.parse](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse) 的 `reviver` 参数。仅在 `needParsed=true` 时生效。\n * @param {string} [options.prefix] 缓存键前缀。\n * @example\n * // 自定义过期时间\n * const memoryCache = new Cache({ stdTTL: 60 * 1000 });\n * memoryCache.set('foo', { baz: 42 });\n * memoryCache.get('foo');\n * // { baz: 42 }\n *\n * // 60 seconds later\n *\n * memoryCache.get('foo');\n * // undefined\n *\n * // 命名空间、自定义缓存\n * const localCache = new Cache('namespace', { storage: window.localStorage });\n * localCache.set('foo', { baz: 42 });\n * localCache.get('foo');\n * // { baz: 42 }\n *\n * localCache.del('foo');\n * localCache.get('foo');\n * // undefined\n */\nvar Cache = /** @class */ (function (_super) {\n    __extends(Cache, _super);\n    function Cache(namespace, options) {\n        var _this = _super.call(this) || this;\n        var ns = defaultNamespace, opts;\n        if (typeof namespace === 'string') {\n            ns = namespace || defaultNamespace;\n        }\n        else if (typeof namespace === 'object') {\n            opts = namespace;\n        }\n        if (!opts && typeof options === 'object') {\n            opts = options;\n        }\n        _this.options = __assign({ max: -1, stdTTL: 0, maxStrategy: 'limited', checkperiod: 0, prefix: defaultPrefix }, opts);\n        _this.storage = new Storage(_this.options.storage, __assign({ memoryScope: ns }, _this.options));\n        _this.cacheKey = ns;\n        _this.startCheckperiod();\n        return _this;\n    }\n    /**\n     * 检查当前键值是否过期，如果过期将会自动删除。\n     *\n     * @param key 键名称。\n     * @param data 缓存数据。\n     * @returns 如果键值已过期返回 `false` ，否则返回 `true`。\n     */\n    Cache.prototype._check = function (key, data) {\n        var ret = true;\n        if (data.t !== 0 && data.t < Date.now()) {\n            ret = false;\n            this.del(key);\n            this.emit('expired', key, data.v);\n        }\n        return ret;\n    };\n    Cache.prototype._wrap = function (value, ttl) {\n        var now = Date.now();\n        var currentTtl = typeof ttl === 'number' ? ttl : this.options.stdTTL;\n        var livetime = currentTtl > 0 ? now + currentTtl : 0;\n        return {\n            v: value,\n            t: livetime,\n            n: now\n        };\n    };\n    Cache.prototype._isLimited = function (len) {\n        return this.options.max > -1 && len >= this.options.max;\n    };\n    Cache.prototype._getReplaceKey = function (keys, cacheValues) {\n        var retkey = keys[0];\n        keys.forEach(function (key) {\n            if (cacheValues[key].t < cacheValues[retkey].t ||\n                (cacheValues[key].t === cacheValues[retkey].t && cacheValues[key].n < cacheValues[retkey].n)) {\n                retkey = key;\n            }\n        });\n        return retkey;\n    };\n    Object.defineProperty(Cache.prototype, \"cacheValues\", {\n        /**\n         * 获取全部缓存数据，不处理过期数据和排序\n         */\n        get: function () {\n            return this.storage.get(this.cacheKey) || {};\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // 设置缓存数据\n    Cache.prototype.setCacheValues = function (values) {\n        this.storage.set(this.cacheKey, values);\n    };\n    /**\n     * 获取缓存值。\n     *\n     * @param {string} key 键名称。\n     * @returns {*} 如果找到该值，则返回该值。如果未找到或已过期，则返回 `undefined`。\n     * @example\n     * myCache.set('myKey', obj, 5 * 60 * 1000);\n     * myCache.get('myKey');\n     * // { foo: 'bar', baz: 42 }\n     *\n     * myCache.get('myKey2');\n     * // undefined\n     */\n    Cache.prototype.get = function (key) {\n        var data = this.cacheValues[key];\n        if (data && this._check(key, data)) {\n            return data.v;\n        }\n        return;\n    };\n    /**\n     * 获取多个缓存值。\n     *\n     * @param {string[]} keys 多个键名称。\n     * @returns {Object} 如果找到对应键名的值，返回一个具有键值对的对象。如果未找到或已过期，则返回一个空对象 `{}`。\n     * @example\n     * myCache.mset([\n     *   { key: 'myKey', value: { foo: 'bar', baz: 42 }, ttl: 5 * 60 * 1000 },\n     *   { key: 'myKey2', value: { a: 1, b: 2 } },\n     *   { key: 'myKey3', value: 'abc' }\n     * ]);\n     *\n     * myCache.mget(['myKey', 'myKey2']);\n     * // {\n     * //   myKey: { foo: 'bar', baz: 42 },\n     * //   myKey2: { a: 1, b: 2 }\n     * // }\n     */\n    Cache.prototype.mget = function (keys) {\n        var _this = this;\n        var ret = {};\n        if (!Array.isArray(keys)) {\n            return ret;\n        }\n        var cacheValues = this.cacheValues;\n        keys.forEach(function (key) {\n            var data = cacheValues[key];\n            if (data && _this._check(key, data)) {\n                ret[key] = data.v;\n            }\n        });\n        return ret;\n    };\n    /**\n     * 获取全部缓存值。\n     *\n     * @returns {Object} 返回一个具有键值对的对象。\n     * @example\n     * myCache.mset([\n     *   { key: 'myKey', value: { foo: 'bar', baz: 42 }, ttl: 5 * 60 * 1000 },\n     *   { key: 'myKey2', value: { a: 1, b: 2 } },\n     *   { key: 'myKey3', value: 'abc' }\n     * ]);\n     *\n     * myCache.getAll();\n     * // {\n     * //   myKey: { foo: 'bar', baz: 42 },\n     * //   myKey2: { a: 1, b: 2 }\n     * //   myKey3: 'abc'\n     * // }\n     */\n    Cache.prototype.getAll = function () {\n        var keys = Object.keys(this.cacheValues);\n        return this.mget(keys);\n    };\n    /**\n     * 设置缓存数据。\n     *\n     * 如果超出缓存数量，可能会设置失败。\n     *\n     * @param {string} key 键名称。\n     * @param {*} value 键值。\n     * @param {number} [ttl] 数据存活时间。单位毫秒 `ms`。\n     * @returns {boolean} 如果设置成功返回 `true`，否则返回 `false`。\n     * @example\n     * myCache.set('myKey', { foo: 'bar', baz: 42 }, 5 * 60 * 1000);\n     * // true\n     */\n    Cache.prototype.set = function (key, value, ttl) {\n        if (this.options.max === 0) {\n            return false;\n        }\n        var cacheValues = this.cacheValues;\n        var keys = Object.keys(cacheValues);\n        // 当前不存在该键值，并且数据量超过最大限制\n        if (!cacheValues[key] && this._isLimited(keys.length)) {\n            var validKeys = this.keys();\n            if (this._isLimited(validKeys.length)) {\n                // 如果最大限制策略是替换，将优先替换快过期的数据，如果都是一样的过期时间(0)，按照先入先出规则处理。\n                if (this.options.maxStrategy === 'replaced') {\n                    var replaceKey = this._getReplaceKey(validKeys, cacheValues);\n                    this.del(replaceKey);\n                }\n                else {\n                    // 如果是最大限制策略是不允许添加，返回 false 。\n                    return false;\n                }\n            }\n        }\n        cacheValues[key] = this._wrap(value, ttl);\n        this.setCacheValues(cacheValues);\n        this.emit('set', key, cacheValues[key].v);\n        return true;\n    };\n    /**\n     * 设置多个缓存数据。\n     *\n     * @param {Object[]} keyValueSet 多个键值对数据。\n     * @returns {boolean} 如果全部设置成功返回 `true`，否则返回 `false`。\n     * @example\n     * myCache.mset([\n     *   { key: 'myKey', value: { foo: 'bar', baz: 42 }, ttl: 5 * 60 * 1000 },\n     *   { key: 'myKey2', value: { a: 1, b: 2 } },\n     *   { key: 'myKey3', value: 'abc' }\n     * ]);\n     * // true\n     */\n    Cache.prototype.mset = function (keyValueSet) {\n        var _this = this;\n        // 该处不使用数组 some 方法，是因为不能某个失败，而导致其他就不在更新。\n        var ret = true;\n        keyValueSet.forEach(function (item) {\n            var itemSetResult = _this.set(item.key, item.value, item.ttl);\n            if (ret && !itemSetResult) {\n                ret = false;\n            }\n        });\n        return ret;\n    };\n    /**\n     * 删除一个或多个键。\n     *\n     * @param {string|string[]} key 要删除的键名。\n     * @returns {number} 返回已删除的数量。\n     * @example\n     * myCache.set('myKey', { foo: 'bar', baz: 42 });\n     * myCache.del('myKey'); // 1\n     * myCache.del('not found'); // 0\n     *\n     * myCache.mset([\n     *   { key: 'myKey', value: { foo: 'bar', baz: 42 }, ttl: 5 * 60 * 1000 },\n     *   { key: 'myKey2', value: { a: 1, b: 2 } },\n     *   { key: 'myKey3', value: 'abc' }\n     * ]);\n     * myCache.del(['myKey', 'myKey2']); // 2\n     */\n    Cache.prototype.del = function (key) {\n        var _this = this;\n        var cacheValues = this.cacheValues;\n        var count = 0;\n        var keys = Array.isArray(key) ? key : [key];\n        keys.forEach(function (key) {\n            if (cacheValues[key]) {\n                count++;\n                var oldData = cacheValues[key];\n                delete cacheValues[key];\n                _this.emit('del', key, oldData.v);\n            }\n        });\n        if (count > 0) {\n            this.setCacheValues(cacheValues);\n        }\n        return count;\n    };\n    /**\n     * 清除全部缓存的数据。\n     *\n     * @example\n     * myCache.set('bar', 1);\n     * myCache.set('foo', 2);\n     * myCache.keys(); // ['bar', 'foo']\n     *\n     * myCache.clear();\n     * myCache.keys(); // []\n     */\n    Cache.prototype.clear = function () {\n        this.storage.del(this.cacheKey);\n    };\n    /**\n     * 获取全部键名的数组。\n     *\n     * @returns {string[]} 返回全部键名的数组。\n     * @example\n     * myCache.set('bar', 1);\n     * myCache.set('foo', 2);\n     *\n     * myCache.keys(); // ['bar', 'foo']\n     */\n    Cache.prototype.keys = function () {\n        var _this = this;\n        var cacheValues = this.cacheValues;\n        var keys = Object.keys(cacheValues);\n        return keys.filter(function (key) { return _this._check(key, cacheValues[key]); });\n    };\n    /**\n     * 判断是否存在某个键。\n     *\n     * @param {string} key 键名称。\n     * @returns {boolean} 如果包含该键返回 `true`，否则返回 `false`。\n     * @example\n     * myCache.has('foo'); // false\n     *\n     * myCache.set('foo', 1);\n     * myCache.has('foo'); // true\n     */\n    Cache.prototype.has = function (key) {\n        var data = this.cacheValues[key];\n        return !!(data && this._check(key, data));\n    };\n    /**\n     * 获取缓存值并从缓存中删除键。\n     *\n     * @param {string} key 键名称。\n     * @returns {*} 如果找到该值，则返回该值，并从缓存中删除该键。如果未找到或已过期，则返回 `undefined`。\n     * @example\n     * myCache.set('myKey', 'myValue');\n     * myCache.has('myKey'); // true\n     *\n     * myCache.take('myKey'); // 'myValue'\n     * myCache.has('myKey'); // false\n     */\n    Cache.prototype.take = function (key) {\n        var ret;\n        var data = this.cacheValues[key];\n        if (data && this._check(key, data)) {\n            ret = data.v;\n            this.del(key);\n        }\n        return ret;\n    };\n    /**\n     * 更新缓存键值的数据存活时间。\n     *\n     * @param {string} key 键名称。\n     * @param {number} ttl 数据存活时间。\n     * @returns {boolean} 如果找到并更新成功，则返回 `true`，否则返回 `false`。\n     * @example\n     * myCache.set('myKey', { foo: 'bar', baz: 42 }, 5 * 60 * 1000);\n     * myCache.ttl('myKey', 60 * 1000);\n     * // true\n     *\n     * myCache.ttl('not found', 1000);\n     * // false\n     */\n    Cache.prototype.ttl = function (key, ttl) {\n        var cacheValues = this.cacheValues;\n        var data = cacheValues[key];\n        if (data && this._check(key, data)) {\n            cacheValues[key] = this._wrap(data.v, ttl);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * 获取某个键的过期时间戳。\n     *\n     * @param {string} key 键名称。\n     * @returns {number | undefined} 如果未找到键或已过期，返回 `undefined`。如果 `ttl` 为 `0`，返回 `0`，否则返回一个以毫秒为单位的时间戳，表示键值将过期的时间。\n     * @example\n     * const myCache = new Cache({ stdTTL: 5 * 1000 });\n     *\n     * // 假如 Date.now() = 1673330000000\n     * myCache.set('ttlKey', 'expireData');\n     * myCache.set('noTtlKey', 'nonExpireData', 0);\n     *\n     * myCache.getTtl('ttlKey'); // 1673330005000\n     * myCache.getTtl('noTtlKey'); // 0\n     * myCache.getTtl('unknownKey'); // undefined\n     */\n    Cache.prototype.getTtl = function (key) {\n        var cacheValues = this.cacheValues;\n        var data = cacheValues[key];\n        if (data && this._check(key, data)) {\n            return cacheValues[key].t;\n        }\n        return;\n    };\n    /**\n     * 获取某个键值的最后修改时间。\n     *\n     * @param {string} key 键名称。\n     * @returns {number | undefined} 如果未找到键或已过期，返回 `undefined`，否则返回一个以毫秒时间戳，表示键值最后修改时间。\n     * @example\n     * const myCache = new Cache();\n     *\n     * // 假如 Date.now() = 1673330000000\n     * myCache.set('myKey', 'foo');\n     * myCache.getLastModified('myKey'); // 1673330000000\n     *\n     * // 5000ms later\n     * myCache.set('myKey', 'bar');\n     * myCache.getLastModified('myKey'); // 1673330005000\n     */\n    Cache.prototype.getLastModified = function (key) {\n        var cacheValues = this.cacheValues;\n        var data = cacheValues[key];\n        if (data && this._check(key, data)) {\n            return cacheValues[key].n;\n        }\n        return;\n    };\n    /**\n     * 启动定时校验过期数据。\n     *\n     * 注意，如果没有设置 `checkperiod` 将不会触发定时器。\n     *\n     * @example\n     * // 设置 checkperiod 之后自动生效\n     * const myCache = new Cache({\n     *   checkperiod: 10 * 60 * 1000 // 10分钟检查一次数据是否过期\n     * });\n     *\n     * // 停止定时校验过期数据\n     * myCache.stopCheckperiod();\n     *\n     * // 启动定时校验过期数据\n     * myCache.startCheckperiod();\n     */\n    Cache.prototype.startCheckperiod = function () {\n        var _this = this;\n        // 触发全部缓存数据是否过期校验\n        this.keys();\n        if (this.options.checkperiod > 0) {\n            clearTimeout(this._checkTimeout);\n            this._checkTimeout = setTimeout(function () {\n                _this.startCheckperiod();\n            }, this.options.checkperiod);\n        }\n    };\n    /**\n     * 停止定时校验过期数据。\n     *\n     * @example\n     * // 设置 checkperiod 之后自动生效\n     * const myCache = new Cache({\n     *   checkperiod: 10 * 60 * 1000 // 10分钟检查一次数据是否过期\n     * });\n     *\n     * // 停止定时校验过期数据\n     * myCache.stopCheckperiod();\n     */\n    Cache.prototype.stopCheckperiod = function () {\n        clearTimeout(this._checkTimeout);\n    };\n    return Cache;\n}(Emitter));\n\nexport { Cache, Storage, Cache as default };\n","import { __assign } from 'tslib';\nimport { Cache } from 'cache2';\nimport { isString, uniqueId } from 'ut2';\n\nvar AsyncMemo = (function () {\n    function AsyncMemo(options) {\n        this.promiseCache = {};\n        this.cache = new Cache(uniqueId('uh_async_memo'), options);\n    }\n    AsyncMemo.prototype.run = function (asyncFn, key, options) {\n        var _this = this;\n        if (!key || !isString(key)) {\n            return asyncFn();\n        }\n        var opts = __assign({ persisted: true }, options);\n        if (opts.persisted) {\n            var data = this.cache.get(key);\n            if (data) {\n                return Promise.resolve(data);\n            }\n        }\n        if (!this.promiseCache[key]) {\n            this.promiseCache[key] = asyncFn()\n                .then(function (res) {\n                delete _this.promiseCache[key];\n                _this.cache.set(key, res, opts.ttl);\n                return res;\n            })\n                .catch(function (err) {\n                delete _this.promiseCache[key];\n                return Promise.reject(err);\n            });\n        }\n        return this.promiseCache[key];\n    };\n    return AsyncMemo;\n}());\nvar AsyncMemo$1 = AsyncMemo;\n\nexport { AsyncMemo$1 as default };\n","import getTag from './internals/getTag.js';\nimport { stringTag } from './internals/native.js';\n\nfunction isString(value) {\n    return typeof value === 'string' || getTag(value) === stringTag;\n}\n\nexport { isString as default };\n","export function isDocumentVisible() {\n  if (typeof document !== 'undefined' && typeof document.visibilityState !== 'undefined') {\n    return document.visibilityState !== 'hidden';\n  }\n  return true;\n}\n\nexport function isOnline() {\n  if (typeof navigator !== 'undefined' && typeof navigator.onLine !== 'undefined') {\n    return navigator.onLine;\n  }\n  return true;\n}\n","// from swr\nimport { isDocumentVisible } from './index';\n\ntype ListenerFunction = () => void;\n\nconst listeners: ListenerFunction[] = [];\n\nfunction subscribe(listener: ListenerFunction) {\n  listeners.push(listener);\n  return function unsubscribe() {\n    const index = listeners.indexOf(listener);\n    listeners.splice(index, 1);\n  };\n}\n\nlet eventsBinded = false;\nif (typeof window !== 'undefined' && window.addEventListener && !eventsBinded) {\n  const revalidate = () => {\n    if (!isDocumentVisible()) return;\n    for (let i = 0; i < listeners.length; i++) {\n      const listener = listeners[i];\n      listener();\n    }\n  };\n  window.addEventListener('visibilitychange', revalidate, false);\n  // only bind the events once\n  eventsBinded = true;\n}\n\nexport default subscribe;\n","// from swr\nimport { isDocumentVisible, isOnline } from './index';\n\ntype ListenerFunction = () => void;\n\nconst listeners: ListenerFunction[] = [];\n\nfunction subscribe(listener: ListenerFunction) {\n  listeners.push(listener);\n  return function unsubscribe() {\n    const index = listeners.indexOf(listener);\n    listeners.splice(index, 1);\n  };\n}\n\nlet eventsBinded = false;\nif (typeof window !== 'undefined' && window.addEventListener && !eventsBinded) {\n  const revalidate = () => {\n    if (!isDocumentVisible() || !isOnline()) return;\n    for (let i = 0; i < listeners.length; i++) {\n      const listener = listeners[i];\n      listener();\n    }\n  };\n  window.addEventListener('visibilitychange', revalidate, false);\n  window.addEventListener('focus', revalidate, false);\n  // only bind the events once\n  eventsBinded = true;\n}\n\nexport default subscribe;\n","import { debounce, throttle } from 'ut2';\nimport { AsyncMemo } from 'util-helpers';\nimport { isDocumentVisible } from '../utils';\nimport limit from '../utils/limit';\nimport subscribeVisible from '../utils/windowVisible';\nimport subscribeFocus from '../utils/windowFocus';\n\nconst asyncMemo = new AsyncMemo({ prefix: 'rc-hooks', stdTTL: 5 * 60 * 1000 });\n\n/**\n * 获取缓存键值。\n *\n * @param key 键名称。\n * @returns 如果找到缓存键值，返回该键值，否则返回 `undefined`。\n */\nexport function getCache<T = any>(key: string) {\n  return asyncMemo.cache.get(key) as T;\n}\n\n/**\n * 清理缓存。如果不传参数，表示清理全部。\n *\n * @param key 键名称。\n */\nexport function clearCache(key?: string | string[]) {\n  if (key) {\n    asyncMemo.cache.del(key);\n  } else {\n    asyncMemo.cache.clear();\n  }\n}\n\ntype InternalOptions<R = any, P extends any[] = any[]> = {\n  /**\n   * @description 缓存的键值。启用缓存机制，异步成功结果将被缓存。如果多个相同 cacheKey 的异步同时触发中，将共享第一个异步结果。\n   */\n  cacheKey?: string;\n\n  /**\n   * @description 缓存时间。单位毫秒。\n   * @default 5*60*1000\n   */\n  cacheTime: number;\n\n  /**\n   * @description 持久化数据。开启后，在触发异步时如果有缓存数据，不再执行异步函数。需要配合 `cacheKey` `cacheTime` 使用。\n   * @default false\n   */\n  persisted: boolean;\n\n  /**\n   * @description 格式化异步返回结果。\n   * @param res 异步返回的数据。\n   * @param params 触发异步函数的参数。\n   * @returns 格式化后的数据。\n   */\n  formatResult?: (res: any, params: P) => R;\n\n  /**\n   * @description 异步函数 `resolve` 时触发，参数为 `data` 和 `params`。\n   * @param data 异步返回的数据。\n   * @param params 触发异步函数的参数。\n   * @returns\n   */\n  onSuccess?: (data: R, params: P) => void;\n\n  /**\n   * @description 异步函数异常错误时触发，参数为 `error` 和 `params`。\n   * @param err 错误信息。\n   * @param params 触发异步函数的参数。\n   * @returns\n   */\n  onError?: (err: Error, params: P) => void;\n\n  /**\n   * @description 异步函数执行完成后触发。\n   * @returns\n   */\n  onFinally?: () => void;\n\n  /**\n   * @description 异步函数执行前触发，参数为 `params`。\n   * @param params 触发异步函数的参数。\n   * @returns\n   */\n  onBefore?: (params: P) => void;\n\n  /**\n   * @description 防抖间隔，单位为毫秒。设置后，请求进入防抖模式。\n   */\n  debounceInterval?: number;\n\n  /**\n   * @description 节流间隔，单位为毫秒。设置后，请求进入节流模式。\n   */\n  throttleInterval?: number;\n\n  /**\n   * @description 轮询间隔，单位为毫秒。设置后，将进入轮询模式，定时触发 `run`。\n   */\n  pollingInterval?: number;\n\n  /**\n   * @description 在页面隐藏时，是否继续轮询。如果为 `true`，不会停止轮询。如果为 `false`，在页面隐藏时会暂时停止轮询，页面重新显示时继续上次轮询。\n   * @default true\n   */\n  pollingWhenHidden: boolean;\n\n  /**\n   * @description 在屏幕重新获取焦点或重新显示时，是否重新发起请求。如果为 `false`，不会重新发起请求。如果为 `true`，在屏幕重新聚焦或重新显示时，会重新发起请求。\n   * @default false\n   */\n  refreshOnWindowFocus: boolean;\n\n  /**\n   * @description 屏幕重新聚焦，重新发起请求时间间隔。需要配置 `refreshOnWindowFocus` 使用。\n   * @default 5000\n   */\n  focusTimespan: number;\n};\n\nexport type Options<R = any, P extends any[] = any[]> = Partial<InternalOptions<R, P>>;\n\nexport type AsyncFunction<R = any, P extends any[] = any[]> = (...args: P) => Promise<R>;\n\nclass Async<R = any, P extends any[] = any[]> {\n  private async: AsyncFunction<R, P>;\n  private debounce: ReturnType<typeof debounce<AsyncFunction<R, P>>> | undefined;\n  private throttle: ReturnType<typeof throttle<AsyncFunction<R, P>>> | undefined;\n  private unsubscribes: (() => void)[];\n  private options: InternalOptions<R, P>;\n\n  constructor(async: AsyncFunction<R, P>, options: Options<R, P>) {\n    this.async = async;\n    this.options = {\n      cacheTime: 5 * 60 * 1000,\n      persisted: false,\n      pollingWhenHidden: true,\n      refreshOnWindowFocus: false,\n      focusTimespan: 5000,\n      ...options\n    };\n\n    // 取消订阅列表\n    this.unsubscribes = [];\n\n    this.init();\n  }\n\n  // 初始化\n  private init() {\n    const { pollingInterval, refreshOnWindowFocus, focusTimespan } = this.options;\n\n    // 延迟执行\n    this.updateDebounce();\n\n    // 订阅页面显示时触发轮询\n    if (pollingInterval) {\n      this.unsubscribes.push(subscribeVisible(this.rePolling.bind(this)));\n    }\n\n    // 订阅屏幕聚焦时请求\n    if (refreshOnWindowFocus) {\n      const limitRefresh = limit(this.refresh.bind(this), focusTimespan);\n      this.unsubscribes.push(subscribeFocus(limitRefresh));\n    }\n  }\n\n  // 内部缓存参数\n  private params: any = [];\n\n  // 更新延迟执行\n  private updateDebounce() {\n    const { debounceInterval, throttleInterval } = this.options;\n    this.debounce =\n      typeof debounceInterval === 'number' && debounceInterval > 0\n        ? debounce(this._run, debounceInterval)\n        : undefined;\n    this.throttle =\n      typeof throttleInterval === 'number' && throttleInterval > 0\n        ? throttle(this._run, throttleInterval)\n        : undefined;\n  }\n\n  // 标识页面获取焦点时是否触发轮询\n  private pollingWhenVisibleFlag = false;\n\n  // 轮询定时器\n  private pollingTimer: any = null;\n\n  // 轮询\n  private rePolling() {\n    if (this.pollingWhenVisibleFlag) {\n      this.pollingWhenVisibleFlag = false;\n      this.refresh();\n    }\n  }\n\n  // 内部标记当前执行计数，防止同一个实例执行多次run 或 不执行取消后的run\n  private counter = 1;\n\n  private afterUpdateOptions(prevOptions: Options<R, P>, nextOptions: Partial<Options<R, P>> = {}) {\n    // 可能取消延迟\n    if (\n      ('debounceInterval' in nextOptions &&\n        nextOptions.debounceInterval !== prevOptions.debounceInterval) ||\n      ('throttleInterval' in nextOptions &&\n        nextOptions.throttleInterval !== prevOptions.throttleInterval)\n    ) {\n      this.updateDebounce();\n    }\n  }\n\n  // 更新配置\n  updateOptions(options: Partial<Options<R, P>>) {\n    const prevOptions = this.options;\n    const nextOptions = {\n      ...this.options,\n      ...options\n    };\n    this.options = nextOptions;\n    this.afterUpdateOptions(prevOptions, nextOptions);\n  }\n\n  // 发起请求\n  // 不返回Promise，只支持 onSuccess 或 onError 回调处理，避免多个实例同时调用 run 导致部分 Promise 没有触发问题\n  private _run(...args: P) {\n    if (this.pollingTimer) {\n      clearTimeout(this.pollingTimer);\n    }\n\n    // 防止执行取消的异步结果\n    // 触发多次run，只有执行最后一次异步结果\n    const count = this.counter;\n    this.params = args;\n    const {\n      cacheKey,\n      cacheTime,\n      persisted,\n      formatResult,\n      onSuccess,\n      onError,\n      onFinally,\n      onBefore,\n      pollingWhenHidden,\n      pollingInterval\n    } = this.options;\n\n    onBefore?.(args);\n\n    return new Promise<R>((resolve, reject) => {\n      asyncMemo\n        .run(\n          () =>\n            this.async.apply(this, args).then((res) => {\n              return typeof formatResult === 'function' ? formatResult(res, args) : res;\n            }),\n          cacheKey,\n          { persisted, ttl: cacheTime }\n        )\n        .then((fmtRes) => {\n          if (count === this.counter) {\n            onSuccess?.(fmtRes, args);\n            resolve(fmtRes);\n          }\n        })\n        .catch((err) => {\n          if (count === this.counter) {\n            onError?.(err, args);\n            reject(err);\n          }\n        })\n        .finally(() => {\n          if (count === this.counter) {\n            onFinally?.();\n\n            if (pollingInterval) {\n              if (!isDocumentVisible() && !pollingWhenHidden) {\n                this.pollingWhenVisibleFlag = true;\n                return;\n              }\n              this.pollingTimer = setTimeout(() => {\n                this.run.apply(this, args);\n              }, pollingInterval);\n            }\n          }\n        });\n    });\n  }\n\n  // 执行异步\n  run(...args: P) {\n    if (this.debounce) {\n      this.debounce.apply(this, args);\n      return Promise.resolve(null);\n    }\n    if (this.throttle) {\n      this.throttle.apply(this, args);\n      return Promise.resolve(null);\n    }\n\n    this.counter += 1;\n    return this._run.apply(this, args);\n  }\n\n  // 使用之前参数，重新执行异步\n  refresh() {\n    return this.run.apply(this, this.params);\n  }\n\n  // 取消请求\n  cancel() {\n    if (this.debounce) {\n      this.debounce.cancel();\n    }\n\n    if (this.throttle) {\n      this.throttle.cancel();\n    }\n\n    // 取消轮询定时器\n    if (this.pollingTimer) {\n      clearTimeout(this.pollingTimer);\n      this.pollingTimer = null;\n    }\n\n    this.counter += 1;\n  }\n\n  // 标识是否销毁\n  private destroyed = false;\n\n  // 销毁\n  destroy(needCancel = true) {\n    if (needCancel) {\n      this.cancel();\n    }\n\n    if (!this.destroyed) {\n      this.destroyed = true;\n      this.unsubscribes.forEach((s) => s());\n      this.unsubscribes = [];\n    }\n  }\n\n  // 恢复\n  resume() {\n    if (this.destroyed) {\n      this.destroyed = false;\n      this.init();\n    }\n  }\n}\n\nexport default Async;\n","export default function limit(fn: (...args: any[]) => void, timespan: number) {\n  let pending = false;\n  return (...args: any[]) => {\n    if (pending) return;\n    pending = true;\n    fn.apply(void 0, args);\n    setTimeout(() => {\n      pending = false;\n    }, timespan);\n  };\n}\n","import { useState, useEffect, useCallback, useRef } from 'react';\nimport { isArray, noop } from 'ut2';\nimport usePersistFn from '../usePersistFn';\nimport useUpdateEffect from '../useUpdateEffect';\nimport useLatest from '../useLatest';\nimport AsyncCalss, { getCache, clearCache, Options, AsyncFunction } from './Async';\n\nexport { clearCache };\n\ntype AsyncOptions<R = any, P extends any[] = any[]> = Partial<\n  {\n    /**\n     * @description 在初始化时自动执行异步函数。如果为 `false`，则需要手动调用 `run` 触发执行。\n     * @default true\n     */\n    autoRun: boolean;\n\n    /**\n     * @description `refreshDeps` 变化，会触发重新执行。仅在 `autoRun = true` 时生效。\n     */\n    refreshDeps: any[];\n\n    /**\n     * @description 如果 `autoRun=true` 自动执行 `run` 的默认参数。\n     */\n    defaultParams: P;\n\n    /**\n     * @description 设置 `loading` 延迟时间，避免闪烁，单位为毫秒。\n     */\n    loadingDelay: number;\n\n    /**\n     * @private 该API仅用于内部传递，请不要使用。\n     */\n    __INTERNAL_FORMAT__: (res: R, params: P) => R;\n\n    /**\n     * @description 初始化默认 `loading` 值。\n     * @default false\n     */\n    defaultLoading: boolean;\n\n    /**\n     * @description 初始化的 `data`。\n     */\n    initialData: R | undefined;\n  } & Omit<Options<R, P>, 'formatResult'>\n>;\n\nexport type { AsyncOptions, AsyncFunction };\n\ntype AsyncReturn<R = any, P extends any[] = any[]> = {\n  /**\n   * @description 执行异步函数的参数数组。比如你触发了 `run(1, 2, 3)`，则 `params` 等于 `[1, 2, 3]`。\n   * @default []\n   */\n  params: P;\n\n  /**\n   * @description 异步函数正在执行。\n   */\n  loading: boolean;\n\n  /**\n   * @description 异步函数抛出的异常。\n   * @default undefined\n   */\n  error: null | Error;\n\n  /**\n   * @description 异步函数的返回值。\n   * @default undefined\n   */\n  data?: R | undefined;\n\n  /**\n   * @description 执行异步函数。\n   * @param args 异步函数的参数。\n   * @returns\n   */\n  run: (...args: P) => Promise<R>;\n\n  /**\n   * @description 使用上一次的 `params`，重新执行异步函数。\n   * @returns\n   */\n  refresh: () => Promise<R>;\n\n  /**\n   * @description 取消当前请求。如果有轮询，停止轮询。\n   * @returns\n   */\n  cancel: () => void;\n\n  /**\n   * @description 直接修改 `data`。\n   * @param newData 新的 data 值。\n   * @returns\n   */\n  mutate: (newData: R | ((oldData: R) => R) | undefined) => void;\n};\n\ninterface UseAsync {\n  <R = any, P extends any[] = any[]>(\n    asyncFn: AsyncFunction<R, P>,\n    options?: Omit<AsyncOptions<R, P>, 'debounceInterval' | 'throttleInterval'>\n  ): AsyncReturn<R, P>;\n  <R = any, P extends any[] = any[]>(\n    asyncFn: AsyncFunction<R, P>,\n    options?: Omit<AsyncOptions<R, P>, 'debounceInterval' | 'throttleInterval'> &\n      (\n        | { debounceInterval: number }\n        | { throttleInterval: number }\n        | { debounceInterval: number; throttleInterval: number }\n      )\n  ): Omit<AsyncReturn<R, P>, 'run' | 'refresh'> & {\n    /**\n     * @description 使用防抖或节流方式执行异步函数。\n     * @param args 异步函数的参数。\n     * @returns\n     */\n    run: (...args: P) => Promise<null>;\n\n    /**\n     * @description 使用上一次的 `params`，重新执行异步函数。\n     * @returns\n     */\n    refresh: () => Promise<null>;\n  };\n}\n\n/**\n * 管理异步函数。\n *\n * @param {Function} asyncFn 异步函数。\n * @param {Object} [options] 配置项。\n * @param {boolean} [options.autoRun=true] 在初始化时自动执行异步函数。如果设置为 `false`，则需要手动调用 `run` 触发执行。默认 `true`。\n * @param {*} [options.initialData] 初始化的 `data`。\n * @param {boolean} [options.defaultLoading=false] 初始化默认 `loading` 值。默认 `false`。\n * @param {Array} [options.defaultParams] 如果 `autoRun=true` 自动执行 `run` 的默认参数。\n * @param {Array} [options.refreshDeps] 在 `autoRun = true` 时，`refreshDeps` 变化，会触发重新执行。\n * @param {Function} [options.onBefore] 异步函数执行前触发，参数为 `params`。\n * @param {Function} [options.onSuccess] 异步函数 `resolve` 时触发，参数为 `data` 和 `params`。\n * @param {Function} [options.onError] 异步函数报错时触发，参数为 `error` 和 `params`。\n * @param {string} [options.cacheKey] 缓存的键值。启用缓存机制，异步成功结果将被缓存。如果多个相同 cacheKey 的异步同时触发中，将共享第一个异步结果。\n * @param {number} [options.cacheTime=5*60*1000] 缓存时间。单位毫秒。\n * @param {boolean} [options.persisted=false] 持久化数据。当有缓存数据时，不再执行异步函数。需要配合 `cacheKey` `cacheTime` 使用。默认 `false`。\n * @param {number} [options.loadingDelay] 设置 `loading` 延迟时间，避免闪烁，单位为毫秒。\n * @param {number} [options.pollingInterval] 轮询间隔，单位为毫秒。设置后，将进入轮询模式，定时触发 `run`。\n * @param {boolean} [options.pollingWhenHidden=true] 在页面隐藏时，是否继续轮询。如果为 `true`，不会停止轮询。如果为 `false`，在页面隐藏时会暂时停止轮询，页面重新显示时继续上次轮询。默认 `true`。\n * @param {boolean} [options.refreshOnWindowFocus=false] 在屏幕重新获取焦点或重新显示时，是否重新发起请求。如果为 `false`，不会重新发起请求。如果为 `true`，在屏幕重新聚焦或重新显示时，会重新发起请求。默认 `false`。\n * @param {number} [options.focusTimespan=5000] 屏幕重新聚焦，重新发起请求时间间隔。需要配置 `refreshOnWindowFocus` 使用。默认 `5000`。\n * @param {number} [options.debounceInterval] 防抖间隔，单位为毫秒，设置后，请求进入防抖模式。\n * @param {number} [options.throttleInterval] 节流间隔，单位为毫秒，设置后，请求进入节流模式。\n * @returns {Object}\n * @example\n * const { data, error, loading, run, cancel, refresh, mutate } = useAsync(asyncFn, options);\n */\nconst useAsync: UseAsync = <R = any, P extends any[] = any[]>(\n  asyncFn: AsyncFunction<R, P>,\n  options?: AsyncOptions<R, P>\n) => {\n  const {\n    autoRun = true,\n    refreshDeps = [],\n    defaultParams,\n    loadingDelay,\n    __INTERNAL_FORMAT__,\n    defaultLoading = false,\n    initialData,\n\n    cacheKey = '',\n    cacheTime = 5 * 60 * 1000,\n    persisted = false,\n    onSuccess = noop,\n    onError = noop,\n    onFinally = noop,\n    onBefore = noop,\n    pollingInterval = 0,\n    pollingWhenHidden = true,\n    refreshOnWindowFocus = false,\n    focusTimespan = 5000,\n    debounceInterval,\n    throttleInterval\n  } = options || {};\n\n  const [state, set] = useState<{\n    params: P;\n    loading: boolean;\n    error: null | Error;\n    data?: R;\n  }>({\n    // 参数兼容非array的情况\n    params: [] as unknown as P,\n    loading: defaultLoading,\n    error: null,\n    data: cacheKey ? getCache<R>(cacheKey) : initialData\n  });\n  const loadingDelayTimerRef = useRef<any>(null); // 延迟loading\n\n  // 持久化一些函数\n  const asyncFnPersist = usePersistFn(asyncFn);\n  const onSuccessPersist = usePersistFn(onSuccess);\n  const onErrorPersist = usePersistFn(onError);\n  const onFinallyPersist = usePersistFn(onFinally);\n  const onBeforePersist = usePersistFn(onBefore);\n\n  const internalFormatRef = useLatest(__INTERNAL_FORMAT__);\n\n  // 异步执行前\n  const handleBefore = useCallback(\n    (p: P) => {\n      onBeforePersist(p);\n\n      // 取消延迟loading\n      if (loadingDelayTimerRef.current) {\n        clearTimeout(loadingDelayTimerRef.current);\n      }\n\n      // 缓存数据\n      const cacheData = cacheKey ? getCache<R>(cacheKey) : undefined;\n\n      // 没有缓存数据 或 没有开启持久缓存，设置loading\n      if (!cacheData || !persisted) {\n        set((s) => ({ ...s, loading: !loadingDelay, params: p }));\n\n        // 设置延迟loading定时器\n        if (loadingDelay) {\n          loadingDelayTimerRef.current = setTimeout(() => {\n            set((s) => ({ ...s, loading: true }));\n          }, loadingDelay);\n        }\n      }\n    },\n    [cacheKey, loadingDelay, onBeforePersist, persisted]\n  );\n\n  // 异步执行成功后\n  const handleSuccess = useCallback(\n    (res: R, args: P) => {\n      if (loadingDelayTimerRef.current) {\n        clearTimeout(loadingDelayTimerRef.current);\n      }\n\n      set((s) => ({ ...s, data: res, error: null, loading: false }));\n      onSuccessPersist(res, args);\n    },\n    [onSuccessPersist]\n  );\n\n  // 异步执行失败后\n  const handleError = useCallback(\n    (err: Error, args: P) => {\n      if (loadingDelayTimerRef.current) {\n        clearTimeout(loadingDelayTimerRef.current);\n      }\n\n      set((s) => ({ ...s, error: err, loading: false }));\n      onErrorPersist(err, args);\n    },\n    [onErrorPersist]\n  );\n\n  // @ts-ignore\n  const asyncInstanceRef: React.MutableRefObject<AsyncCalss<R, P>> = useRef();\n\n  if (!asyncInstanceRef.current) {\n    asyncInstanceRef.current = new AsyncCalss<R, P>(asyncFnPersist, {\n      cacheKey,\n      cacheTime,\n      persisted,\n      formatResult: internalFormatRef.current,\n      onSuccess: handleSuccess,\n      onError: handleError,\n      onFinally: onFinallyPersist,\n      onBefore: handleBefore,\n      debounceInterval,\n      throttleInterval,\n      pollingInterval,\n      pollingWhenHidden,\n      refreshOnWindowFocus,\n      focusTimespan\n    });\n  }\n\n  useUpdateEffect(() => {\n    asyncInstanceRef.current.updateOptions({\n      cacheKey,\n      cacheTime,\n      persisted,\n      formatResult: internalFormatRef.current,\n      onSuccess: handleSuccess,\n      onError: handleError,\n      onFinally: onFinallyPersist,\n      onBefore: handleBefore,\n      debounceInterval,\n      throttleInterval,\n      pollingInterval,\n      pollingWhenHidden,\n      refreshOnWindowFocus,\n      focusTimespan\n    });\n  }, [\n    onSuccessPersist,\n    onErrorPersist,\n    cacheKey,\n    cacheTime,\n    persisted,\n    debounceInterval,\n    throttleInterval,\n    onFinallyPersist,\n    onBeforePersist,\n    pollingInterval,\n    pollingWhenHidden,\n    refreshOnWindowFocus,\n    focusTimespan,\n    handleSuccess,\n    handleError,\n    handleBefore\n  ]);\n\n  // 执行异步\n  const run = useCallback((...args: P) => {\n    return asyncInstanceRef.current.run.apply(asyncInstanceRef.current, args);\n  }, []);\n\n  // 使用上一次执行异步的参数，重新执行\n  const refresh = useCallback(() => {\n    return asyncInstanceRef.current.refresh();\n  }, []);\n\n  const cancel = useCallback(() => {\n    asyncInstanceRef.current.cancel();\n\n    // 取消延迟loading\n    if (loadingDelayTimerRef.current) {\n      clearTimeout(loadingDelayTimerRef.current);\n    }\n\n    set((s) => ({ ...s, loading: false }));\n  }, []);\n\n  // 突变\n  const mutate = (newData: R | undefined | ((oldData: R) => R)) => {\n    if (typeof newData === 'function') {\n      // @ts-ignore\n      set((s) => ({ ...s, data: newData(state.data) }));\n    } else {\n      set((s) => ({ ...s, data: newData }));\n    }\n  };\n\n  // autoRun=true 时，refreshDeps 变化，将重新执行\n  useUpdateEffect(() => {\n    // 区分 React.StrictMode 下触发\n    if (autoRun && isArray(refreshDeps) && refreshDeps.length > 0) {\n      refresh();\n    }\n  }, [autoRun].concat(refreshDeps));\n\n  useEffect(() => {\n    // 默认自动执行\n    if (autoRun) {\n      // 支持默认参数\n      const fmtDefaultParams = isArray(defaultParams)\n        ? defaultParams\n        : ((typeof defaultParams !== 'undefined' ? [defaultParams] : []) as unknown as P);\n      run.apply(void 0, fmtDefaultParams);\n    }\n\n    // 如果销毁过，可以重新恢复异步实例\n    asyncInstanceRef.current.resume();\n\n    return () => {\n      cancel();\n      asyncInstanceRef.current.destroy(false);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return {\n    ...state,\n    run,\n    cancel,\n    mutate,\n    refresh\n  };\n};\n\nexport default useAsync;\n","import { useEffect, useCallback } from 'react';\nimport usePersistFn from '../usePersistFn';\nimport { getScrollHeight, getClientHeight, getScrollTop } from '../utils/dom';\n\ntype ScrollElement = HTMLElement | Window | null | undefined;\n\nexport type TargetType = ScrollElement | (() => ScrollElement);\n\nfunction getTarget(target: TargetType) {\n  if (typeof target === 'function') {\n    // @ts-ignore\n    return target();\n  }\n  return target;\n}\n\ninterface ScrollToLowerProps {\n  target?: TargetType;\n  threshold?: number;\n  onScrollLower?: () => void;\n}\n\nconst useScrollToLower = ({\n  target: outTarget,\n  threshold = 100,\n  onScrollLower = () => {}\n}: ScrollToLowerProps = {}) => {\n  const onScrollLowerPersist = usePersistFn(onScrollLower);\n  const scrollMethod = useCallback(() => {\n    if (!outTarget) {\n      return;\n    }\n    const target = getTarget(outTarget);\n    if (!target) {\n      return;\n    }\n    if (getScrollHeight(target) - getScrollTop(target) <= getClientHeight(target) + threshold) {\n      onScrollLowerPersist();\n    }\n  }, [onScrollLowerPersist, outTarget, threshold]);\n\n  useEffect(() => {\n    if (outTarget) {\n      const target = getTarget(outTarget);\n      if (target) {\n        target.addEventListener('scroll', scrollMethod);\n\n        return () => {\n          target.removeEventListener('scroll', scrollMethod);\n        };\n      }\n    }\n  }, [outTarget, scrollMethod]);\n};\n\nexport default useScrollToLower;\n","import { isBrowser, isWindow } from 'ut2';\n\n/**\n * 获取垂直滚动的像素数\n *\n * @param el 滚动容器，默认 window\n * @returns\n */\nexport const getScrollTop = (el: Window | HTMLElement = window) => {\n  if (!isBrowser || !el) {\n    return 0;\n  }\n  if (isWindow(el)) {\n    return window.scrollY;\n  }\n  return el.scrollTop;\n};\n\n/**\n * 获取元素内容高度，包括由于溢出导致的视图中不可见内容\n *\n * @param el 滚动容器，默认 window\n * @returns\n */\nexport const getScrollHeight = (el: Window | HTMLElement = window) => {\n  if (!isBrowser || !el) {\n    return 0;\n  }\n  if (isWindow(el)) {\n    return document.documentElement.scrollHeight;\n  }\n  return el.scrollHeight;\n};\n\n/**\n * 获取元素内部的高度，包含内边距，但不包括水平滚动条、边框和外边距\n *\n * @param el 滚动容器，默认 window\n * @returns\n */\nexport const getClientHeight = (el: Window | HTMLElement = window) => {\n  if (!isBrowser || !el) {\n    return 0;\n  }\n  if (isWindow(el)) {\n    return document.documentElement.clientHeight;\n  }\n  return el.clientHeight;\n};\n","import { useEffect } from 'react';\nimport useLatest from '../useLatest';\n\n/**\n * 只在组件 `unmount` 时执行的 Hook。\n *\n * @param fn 组件 `unmount` 时执行的函数。\n * @example\n * useUnmount(() => {\n *   console.log('unmount');\n * });\n */\nconst useUnmount = (fn: () => any) => {\n  const fnRef = useLatest(fn);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => () => fnRef.current(), []);\n};\n\nexport default useUnmount;\n","import { useRef } from 'react';\nimport { debounce } from 'ut2';\nimport useUnmount from '../useUnmount';\nimport useLatest from '../useLatest';\n\n/**\n * 用来处理防抖函数的 Hook。\n *\n * @param {Function} fn 需要防抖的函数。\n * @param {number} [wait=0] 防抖等待时间，单位为毫秒。默认 `0`。\n * @param {boolean} [immediate=false] 是否在延迟开始前调用。默认 `false`。\n * @returns\n * @example\n * const [value, setValue] = useState(0);\n * // 频繁调用 run，但只会在所有调用完成 500ms 后执行一次函数\n * const { run } = useDebounceFn(setValue, 500);\n */\nfunction useDebounceFn<T extends (...args: any[]) => any>(fn: T, wait = 0, immediate = false) {\n  const fnRef = useLatest<T>(fn);\n  const debounceRun = useRef(\n    debounce((...args) => fnRef.current.apply(void 0, args), wait, immediate)\n  );\n\n  useUnmount(() => {\n    debounceRun.current.cancel();\n  });\n\n  return {\n    run: debounceRun.current,\n    cancel: debounceRun.current.cancel,\n    flush: debounceRun.current.flush\n  };\n}\n\nexport default useDebounceFn;\n","import { useRef } from 'react';\nimport { throttle } from 'ut2';\nimport useUnmount from '../useUnmount';\nimport useLatest from '../useLatest';\n\n/**\n * 用来处理节流函数的 Hook。\n *\n * @param {Function} fn 需要节流的函数。\n * @param {number} [wait=0] 节流等待时间，单位为毫秒。默认 `0`。\n * @param {boolean} [immediate=true] 是否在延迟开始前调用。默认 `true`。\n * @returns\n * @example\n * const [value, setValue] = useState(0);\n * // 频繁调用 run，但只会每隔 500ms 执行一次函数。\n * const { run } = useThrottleFn(setValue, 500);\n */\nfunction useThrottleFn<T extends (...args: any[]) => any>(fn: T, wait = 0, immediate = true) {\n  const refFn = useLatest<T>(fn);\n  const throttleRun = useRef(\n    throttle((...args) => refFn.current.apply(void 0, args), wait, immediate)\n  );\n\n  useUnmount(() => {\n    throttleRun.current.cancel();\n  });\n\n  return {\n    run: throttleRun.current,\n    cancel: throttleRun.current.cancel,\n    flush: throttleRun.current.flush\n  };\n}\n\nexport default useThrottleFn;\n","import { useRef, useEffect } from 'react';\n\n/**\n * 用于异步回调 或 dom 操作判断当前组件是否装载。\n *\n * 如果组件装载再去更新状态或操作，避免因组件卸载后更新状态而导致的内存泄漏。\n *\n * @returns 返回一个 `ref`。如果组件装载完成，值为 `true`。如果组件未装载完成或卸载，值为 `false`。\n * @example\n * const mountedRef = useMountedRef();\n */\nconst useMountedRef = () => {\n  const mountedRef = useRef(false);\n\n  useEffect(() => {\n    mountedRef.current = true;\n\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n\n  return mountedRef;\n};\n\nexport default useMountedRef;\n","import { useRef, useEffect } from 'react';\n\n/**\n * 用于异步回调中判断当前组件是否卸载。\n *\n * 如果组件卸载就不更新状态，避免因组件卸载后更新状态而导致的内存泄漏。\n *\n * @returns 返回一个 `ref`。如果组件卸载，值为 `true`，否则值为 `false`。\n * @example\n * const unmountedRef = useUnmountedRef();\n */\nconst useUnmountedRef = () => {\n  const unmountedRef = useRef(false);\n\n  useEffect(() => {\n    unmountedRef.current = false;\n\n    return () => {\n      unmountedRef.current = true;\n    };\n  }, []);\n\n  return unmountedRef;\n};\n\nexport default useUnmountedRef;\n","import { useState, useCallback } from 'react';\nimport useUnmountedRef from '../useUnmountedRef';\n\n/**\n * 用法与 React.useState 完全一样，但是在组件卸载后 setState 不再执行，避免因组件卸载后更新状态而导致的内存泄漏。\n *\n * @param {*} initialState 状态初始值。\n * @example\n * const [count, setCount] = useSafeState(0);\n * // 当组件卸载后，调用 `setCount` 不会触发。\n */\nfunction useSafeState<S>(initialState: S | (() => S)): [S, React.Dispatch<React.SetStateAction<S>>];\nfunction useSafeState<S = undefined>(): [\n  S | undefined,\n  React.Dispatch<React.SetStateAction<S | undefined>>\n];\nfunction useSafeState<S>(initialState?: S | (() => S)) {\n  const unmountedRef = useUnmountedRef();\n  const [state, setState] = useState(initialState);\n\n  const setCurrentState = useCallback(\n    (nextState: React.SetStateAction<S | undefined>) => {\n      if (unmountedRef.current) {\n        return;\n      }\n      setState(nextState);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  return [state, setCurrentState];\n}\n\nexport default useSafeState;\n","import { MutableRefObject, RefObject } from 'react';\n\nexport type RefType<T = HTMLElement> =\n  | RefObject<T>\n  | null\n  | (() => T | null)\n  | T\n  | MutableRefObject<T | undefined>;\n\nfunction getRef(ref: RefType) {\n  if (typeof ref === 'function') {\n    // @ts-ignore\n    return ref();\n  } else if (typeof ref === 'object' && ref && 'current' in ref) {\n    return ref.current;\n  } else {\n    return ref;\n  }\n}\n\nexport default getRef;\n","import { throttle, isBrowser } from 'ut2';\n\n// Minimum delay before invoking the update of observers.\nconst REFRESH_DELAY = 50;\n\n// ref: https://github.com/que-etc/resize-observer-polyfill/blob/master/src/ResizeObserverController.js\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nconst transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\nconst defaultObserverOptions = {\n  characterData: true, // 监视指定目标节点或子节点树中节点所包含的字符数据的变化\n  childList: true, // 观察目标子节点的变化，是否有添加或者删除\n  attributes: true, // 观察属性变动\n  subtree: true // 观察后代节点，默认为 false\n};\n\ntype CallbackType = (\n  mutations: (Omit<MutationRecord, 'target'> & { target: HTMLElement | null })[],\n  observer: MutationObserver\n) => void;\n\nclass ResizeObserver {\n  readonly observer;\n  private throttleRefresh: ReturnType<typeof throttle<() => void>>;\n  targetNode: null | HTMLElement;\n  readonly callback;\n\n  constructor(callback: CallbackType) {\n    this.throttleRefresh = throttle(this.refresh, REFRESH_DELAY);\n    this.targetNode = null;\n    this.callback = callback;\n    this.observer = new MutationObserver(this.throttleRefresh);\n  }\n\n  private refresh = () => {\n    if (this.targetNode) {\n      this.callback(\n        [\n          {\n            target: this.targetNode\n          }\n        ] as any,\n        {} as any\n      );\n    }\n  };\n\n  onTransitionEnd_ = ({ propertyName = '' }) => {\n    const isReflowProperty = transitionKeys.some((key) => {\n      return propertyName.indexOf(key) > -1;\n    });\n\n    if (isReflowProperty) {\n      this.throttleRefresh();\n    }\n  };\n\n  observe = (targetNode: HTMLElement, options?: MutationObserverInit) => {\n    if (!isBrowser) {\n      return;\n    }\n\n    this.targetNode = targetNode;\n\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n    window.addEventListener('resize', this.throttleRefresh);\n    this.observer.observe(document, {\n      ...defaultObserverOptions,\n      ...options\n    });\n  };\n\n  disconnect = () => {\n    if (!isBrowser) {\n      return;\n    }\n    this.throttleRefresh.cancel();\n    this.targetNode = null;\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.throttleRefresh);\n    this.observer.disconnect();\n  };\n}\n\nexport default ResizeObserver;\n","import { useEffect } from 'react';\nimport { castArray } from 'ut2';\nimport getRef, { RefType } from '../utils/getRef';\nimport useLatest from '../useLatest';\n\ntype EventType = MouseEvent | TouchEvent;\n\n/**\n * 管理目标元素外事件的 Hook。\n *\n * @param {Object} ref Dom 节点或 Ref 对象，支持数组。\n * @param {Function} onClickAway 触发事件的函数。\n * @param {string | string[]} [events='click'] 监听事件名称，支持数组。默认 `click`。\n * @example\n * const [count, setCount] = React.useState(0);\n * const ref = React.useRef<HTMLSpanElement>(null);\n *\n * useClickAway(ref, () => {\n *   setCount((c) => c + 1);\n * });\n *\n * return (\n *   <div>\n *     <span ref={ref}>\n *       <button>box</button>\n *     </span>\n *     <p>count: {count}</p>\n *   </div>\n * );\n */\nfunction useClickAway<E extends Event = EventType>(\n  ref: RefType | RefType[],\n  onClickAway: (event: E) => void,\n  events: string | string[] = 'click'\n) {\n  const refs = castArray(ref);\n  const latestRefs = useLatest(refs);\n  const refsIsFunc = refs.every((item) => typeof item === 'function');\n  const wrapperRefs = refsIsFunc ? latestRefs : refs;\n\n  const onClickAwayRef = useLatest(onClickAway);\n  const eventsArr = castArray(events);\n  const eventsRef = useLatest(eventsArr);\n  const eventsStr = eventsArr.join('');\n\n  useEffect(() => {\n    const handler = (event: any) => {\n      const targets: RefType[] = refsIsFunc ? (wrapperRefs as any).current : wrapperRefs;\n      if (\n        !targets.some((targetItem) => {\n          const target = getRef(targetItem);\n          return !target || target?.contains(event.target);\n        })\n      ) {\n        onClickAwayRef.current?.(event);\n      }\n    };\n\n    const eventList = castArray(eventsRef.current);\n\n    eventList.forEach((eventName) => {\n      document.addEventListener(eventName, handler);\n    });\n\n    return () => {\n      eventList.forEach((eventName) => {\n        document.removeEventListener(eventName, handler);\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [wrapperRefs, refsIsFunc, eventsStr]);\n}\n\nexport default useClickAway;\n","import { SetStateAction, useCallback, useState } from 'react';\nimport useUpdateEffect from '../useUpdateEffect';\n\ntype Props<T> = {\n  value?: T;\n  defaultValue?: T;\n  [key: string]: any;\n};\n\ntype Options<T> = Partial<{\n  defaultValue: T;\n  defaultValuePropName: string;\n  valuePropName: string;\n  trigger: string;\n}>;\n\n/**\n * 组件状态即可以自己内部管理，也可以由外部控制。\n *\n * @param {Object} props 组件的 `props`。\n * @param {Object} [options] 配置项。\n * @param {*} [options.defaultValue] 默认值，会被 `props.defaultValue` 和 `props.value` 覆盖。\n * @param {string} [options.defaultValuePropName='defaultValue'] 默认值的属性名。默认 `defaultValue`。\n * @param {string} [options.valuePropName='value'] 值的属性名。默认 `value`。\n * @param {string} [options.trigger='onChange'] 修改值时，触发的函数名。默认 `onChange`。\n * @returns {Array}\n * @example\n * const [state, setState] = useControllableValue(props, {\n *   defaultValue: ''\n * });\n */\nfunction useControllableValue<T = any>(props: Props<T> = {}, options: Options<T> = {}) {\n  const {\n    defaultValue,\n    defaultValuePropName = 'defaultValue',\n    valuePropName = 'value',\n    trigger = 'onChange'\n  } = options;\n\n  const hasValueProp = valuePropName in props;\n  const value = props[valuePropName] as T;\n  const [state, setState] = useState<T>(() => {\n    if (hasValueProp) {\n      return value;\n    }\n    if (defaultValuePropName in props) {\n      return props[defaultValuePropName];\n    }\n    return defaultValue;\n  });\n\n  useUpdateEffect(() => {\n    if (hasValueProp) {\n      setState(value);\n    }\n  }, [value, hasValueProp]);\n\n  const handleSetState = useCallback(\n    (v: SetStateAction<T>, ...args: any[]): any => {\n      if (!hasValueProp) {\n        setState(v);\n      }\n      if (props[trigger]) {\n        props[trigger].apply(props, [v].concat(args));\n      }\n    },\n    [hasValueProp, props, trigger]\n  );\n\n  return [hasValueProp ? value : state, handleSetState] as const;\n}\n\nexport default useControllableValue;\n","import { useState, useEffect } from 'react';\nimport useDebounceFn from '../useDebounceFn';\n\n/**\n * 用来处理防抖值的 Hook。\n *\n * @param {*} value 需要防抖的值。\n * @param {number} [wait=0] 防抖等待时间，单位为毫秒。默认 `0`。\n * @param {boolean} [immediate=false] 是否在延迟开始前调用。默认 `false`。\n * @returns\n * @example\n * const [value, setValue] = useState('');\n * // 在 value 修改结束 500ms 后变化。\n * const debouncedValue = useDebounce(value, 500);\n */\nfunction useDebounce<ValueType = any>(value: ValueType, wait = 0, immediate = false) {\n  const [state, setState] = useState(value);\n  const { run } = useDebounceFn(setState, wait, immediate);\n\n  useEffect(() => {\n    run(value);\n  }, [run, value]);\n\n  return state;\n}\n\nexport default useDebounce;\n","import { useEffect, useMemo, useRef, useState } from 'react';\nimport { isArray } from 'ut2';\n\ntype Options = {\n  count?: number;\n  defaultLimited?: boolean;\n};\n\n/**\n * 管理列表展示数量的 Hook。\n *\n * @param {Array} list 列表数据。\n * @param {Object} [options] 配置项。\n * @param {number} [options.count=3] 默认限制列表数量。默认 `3`。\n * @param {boolean} [options.defaultLimited=true] 默认是否限制列表数据。默认 `true`。\n * @returns\n * @example\n * const { data, limited, canLimit, toggle } = useLimitList(list);\n */\nfunction useLimitList<T>(list: T[] = [], options: Options = {}) {\n  const { count = 3, defaultLimited = true } = options || {};\n  const limitedRef = useRef(defaultLimited);\n\n  const safeList = useMemo(() => (isArray(list) ? list : []), [list]);\n  const safeCount = useMemo(() => (count > 0 ? Math.ceil(count) : 0), [count]);\n\n  // 是否可以限制数量\n  const canLimit = useMemo(() => safeList.length > safeCount, [safeCount, safeList.length]);\n\n  // 限制后的值\n  const [data, setData] = useState(() => {\n    if (canLimit && defaultLimited) {\n      return safeList.slice(0, safeCount);\n    }\n    return safeList;\n  });\n\n  // 切换限制/不限制数量\n  const toggle = () => {\n    if (canLimit) {\n      limitedRef.current = !limitedRef.current;\n    }\n    setData(limitedRef.current ? safeList.slice(0, safeCount) : safeList);\n  };\n\n  // 修改 list 或 count 后，触发更新\n  useEffect(() => {\n    setData(limitedRef.current ? safeList.slice(0, safeCount) : safeList);\n  }, [safeCount, safeList]);\n\n  return {\n    /**\n     * 是否可以限制列表数量。当列表数量小于等于 `count` 时，为 `false`。\n     */\n    canLimit,\n\n    /**\n     * 当前是否限制列表数据。\n     */\n    limited: limitedRef.current,\n\n    /**\n     * 列表数据。\n     */\n    data,\n\n    /**\n     * 切换限制列表数据。\n     */\n    toggle\n  };\n}\n\nexport default useLimitList;\n","import { useCallback, useRef } from 'react';\nimport { isArray } from 'ut2';\nimport useAsync, { AsyncOptions } from '.';\nimport useScrollToLower, { TargetType } from './useScrollToLower';\nimport useUpdateEffect from '../useUpdateEffect';\n\n/**\n * 加载更多异步返回类型。\n */\nexport interface LoadMoreAsyncReturn<DataItem = any> {\n  /**\n   * @description 列表数据。\n   */\n  list: DataItem[];\n  [key: string]: any;\n}\n\n/**\n * 异步函数参数类型。\n */\nexport type LoadMoreParams = [\n  page: {\n    current: number;\n  },\n  ...args: any[]\n];\n\nexport interface LoadMoreOptions<DataItem = any, R extends LoadMoreAsyncReturn<DataItem> = any>\n  extends Omit<\n    AsyncOptions<R, LoadMoreParams>,\n    'cacheKey' | 'cacheTime' | 'persisted' | 'pollingInterval' | 'pollingWhenHidden'\n  > {\n  /**\n   * @description 上拉自动加载，距离底部距离阈值。\n   * @default 100\n   */\n  threshold?: number;\n\n  /**\n   * @description 内容的滚动容器。如果存在，则在滚动到底部时，自动触发 `loadMore` 方法。\n   */\n  target?: TargetType;\n\n  /**\n   * @description 判断是否没有更多数据。\n   * @param data 异步返回的数据。\n   * @returns\n   * @default () => false\n   */\n  isNoMore?: (data?: R) => boolean;\n}\n\n/**\n * 基于 `useAsync` 扩展，用于管理加载更多的 Hook。\n *\n * @param {number} [options.threshold=100] 上拉自动加载，距离底部距离阈值。默认 `100`。\n * @param {Object | Function} [options.target] 内容的滚动容器，如果存在，则在滚动到底部时，自动触发 `loadMore` 方法。\n * @param {Function} [options.isNoMore=()=>false] 判断是否没有更多数据。默认 `()=>false`。\n * @param {boolean} [options.autoRun=true] 在初始化时自动执行异步函数。如果设置为 `false`，则需要手动调用 `run` 触发执行。默认 `true`。\n * @param {*} [options.initialData] 初始化的 `data`。\n * @param {boolean} [options.defaultLoading=false] 初始化默认 `loading` 值。默认 `false`。\n * @param {Array} [options.defaultParams] 如果 `autoRun=true` 自动执行 `run` 的默认参数。\n * @param {Array} [options.refreshDeps] 在 `autoRun = true` 时，refreshDeps 变化，会执行 `refresh` （重置`current`到第 1 页，并清除之前列表数据，发起请求。）。\n * @param {Function} [options.onBefore] 异步函数执行前触发，参数为 `params`。\n * @param {Function} [options.onSuccess] 异步函数 `resolve` 时触发，参数为 `data` 和 `params`。\n * @param {Function} [options.onError] 异步函数报错时触发，参数为 `error` 和 `params`。\n * @param {number} [options.loadingDelay] 设置 `loading` 延迟时间，避免闪烁，单位为毫秒。\n * @param {boolean} [options.refreshOnWindowFocus=false] 在屏幕重新获取焦点或重新显示时，是否重新发起请求。如果为 `false`，不会重新发起请求。如果为 `true`，在屏幕重新聚焦或重新显示时，会重新发起请求。默认 `false`。\n * @param {number} [options.focusTimespan=5000] 屏幕重新聚焦，重新发起请求时间间隔。需要配置 `refreshOnWindowFocus` 使用。默认 `5000`。\n * @param {number} [options.debounceInterval] 防抖间隔，单位为毫秒，设置后，请求进入防抖模式。\n * @param {number} [options.throttleInterval] 节流间隔，单位为毫秒，设置后，请求进入节流模式。\n * @returns {Object}\n * @example\n * const { data, error, loading, loadingMore, noMore, loadMore, refresh, cancel } = useLoadMore(asyncFn, options);\n */\nfunction useLoadMore<DataItem = any, R extends LoadMoreAsyncReturn<DataItem> = any>(\n  asyncFn: (...args: LoadMoreParams) => Promise<R>,\n  options?: LoadMoreOptions<R>\n) {\n  const {\n    threshold = 100,\n    target,\n    isNoMore = () => false,\n    refreshDeps = [],\n    autoRun = true,\n    ...restOptions\n  } = (options || {}) as LoadMoreOptions<R>;\n\n  const dataGroup = useRef<R['list']>([]); // 缓存之前请求的列表数据\n  const currentPageRef = useRef(1); // 当前页码\n\n  const {\n    run,\n    data,\n    loading,\n    cancel: reqCancel,\n    params,\n    mutate: reqMutate,\n    ...restAsyncReturn\n  } = useAsync<R, LoadMoreParams>(asyncFn, {\n    defaultParams: [\n      {\n        current: currentPageRef.current\n      }\n    ],\n    autoRun,\n    ...restOptions,\n    onError(err, _params) {\n      // 加载失败并且当前页码大于第一页，页码自减一\n      if (currentPageRef.current > 1) {\n        currentPageRef.current -= 1;\n      }\n      restOptions?.onError?.(err, _params);\n    },\n    __INTERNAL_FORMAT__(res) {\n      dataGroup.current =\n        currentPageRef.current === 1 ? res.list : dataGroup.current.concat(res.list);\n      return {\n        ...res,\n        list: dataGroup.current\n      };\n    }\n  });\n\n  const noMore = isNoMore ? !loading && isNoMore(data) : false;\n  const [firstParams, ...restParams] = params || [];\n\n  const loadData = useCallback(() => {\n    return run.apply(void 0, ([{ current: currentPageRef.current }] as any).concat(restParams));\n  }, [restParams, run]);\n\n  const cancel = useCallback(() => {\n    // 加载中并且当前页码大于第一页，页码自减一\n    if (loading && currentPageRef.current > 1) {\n      currentPageRef.current -= 1;\n    }\n    reqCancel();\n  }, [reqCancel, loading]);\n\n  /**\n   * 触发加载更多。\n   */\n  const loadMore = useCallback(() => {\n    if (loading || noMore) {\n      return;\n    }\n    currentPageRef.current += 1;\n    loadData();\n  }, [loading, noMore, loadData]);\n\n  const mutate: typeof reqMutate = useCallback(\n    (param) => {\n      const res = typeof param === 'function' ? param(data as R) : param;\n      dataGroup.current = res?.list || [];\n      reqMutate(res);\n    },\n    [data, reqMutate]\n  );\n\n  const refresh = useCallback(() => {\n    cancel();\n    currentPageRef.current = 1;\n    mutate((d) => ({\n      ...d,\n      list: []\n    }));\n    return loadData();\n  }, [cancel, loadData, mutate]);\n\n  const scrollMethod = useCallback(() => {\n    if (loading || !target) {\n      return;\n    }\n    return loadMore();\n  }, [loadMore, target, loading]);\n\n  useScrollToLower({\n    target,\n    threshold,\n    onScrollLower: scrollMethod\n  });\n\n  useUpdateEffect(() => {\n    if (autoRun && isArray(refreshDeps) && refreshDeps.length > 0) {\n      refresh();\n    }\n  }, refreshDeps);\n\n  return {\n    ...restAsyncReturn,\n    loading,\n    data,\n    run,\n\n    /**\n     * 重置`current`到第 `1` 页，并清除之前列表数据，发起请求。\n     */\n    refresh,\n    cancel,\n    mutate,\n    params: [{ ...firstParams, current: currentPageRef.current }].concat(restParams),\n\n    /**\n     * 触发加载更多。\n     */\n    loadMore,\n\n    /**\n     * 是否正在加载更多。即加载中并且 `current` 不等于 `1`。\n     */\n    loadingMore: loading && currentPageRef.current > 1,\n\n    /**\n     * 是否没有更多。\n     */\n    noMore\n  };\n}\n\nexport default useLoadMore;\n","import { useEffect } from 'react';\n\n/**\n * 只在组件 mount 时执行的 Hook。\n *\n * @param {Function} fn 组件 `mount` 时执行的函数。\n * @example\n * useMount(() => {\n *   console.log('mount');\n * });\n */\nconst useMount = (fn: () => void) => {\n  useEffect(() => {\n    fn();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\nexport default useMount;\n","import { useMemo, useCallback } from 'react';\nimport { isArray } from 'ut2';\nimport useAsync, { AsyncOptions } from '.';\nimport useUpdateEffect from '../useUpdateEffect';\n\n/**\n * 分页异步返回类型。\n */\nexport interface PaginationAsyncReturn<DataItem = any> {\n  list: DataItem[];\n  total: number;\n  [key: string]: any;\n}\n\n/**\n * 异步函数参数类型。\n */\nexport type PaginationParams = [\n  param1: {\n    current: number;\n    pageSize: number;\n    [key: string]: any;\n  },\n  ...args: any[]\n];\n\nexport interface PaginationOptions<DataItem = any, R extends PaginationAsyncReturn<DataItem> = any>\n  extends AsyncOptions<R, PaginationParams> {\n  defaultPageSize?: number;\n}\n\n/**\n * 基于 `useAsync` 扩展，用于管理分页的 Hook。\n *\n * @param {Function} asyncFn 异步函数。\n * @param {Object} [options] 配置项。\n * @param {number} [options.defaultPageSize=10] 默认每页的数量。\n * @param {boolean} [options.autoRun=true] 在初始化时自动执行异步函数。如果设置为 `false`，则需要手动调用 `run` 触发执行。默认 `true`。\n * @param {*} [options.initialData] 初始化的 `data`。\n * @param {boolean} [options.defaultLoading=false] 初始化默认 `loading` 值。默认 `false`。\n * @param {Array} [options.defaultParams] 如果 `autoRun=true` 自动执行 `run` 的默认参数。\n * @param {Array} [options.refreshDeps] 在 `autoRun = true` 时，refreshDeps 变化，会重置 `current` 到第一页，并执行 `run` 方法。\n * @param {Function} [options.onBefore] 异步函数执行前触发，参数为 `params`。\n * @param {Function} [options.onSuccess] 异步函数 `resolve` 时触发，参数为 `data` 和 `params`。\n * @param {Function} [options.onError] 异步函数报错时触发，参数为 `error` 和 `params`。\n * @param {string} [options.cacheKey] 缓存的键值。启用缓存机制，异步成功结果将被缓存。如果多个相同 cacheKey 的异步同时触发中，将共享第一个异步结果。\n * @param {number} [options.cacheTime=5*60*1000] 缓存时间。单位毫秒。\n * @param {boolean} [options.persisted=false] 持久化数据。当有缓存数据时，不再执行异步函数。需要配合 `cacheKey` `cacheTime` 使用。默认 `false`。\n * @param {number} [options.loadingDelay] 设置 `loading` 延迟时间，避免闪烁，单位为毫秒。\n * @param {number} [options.pollingInterval] 轮询间隔，单位为毫秒。设置后，将进入轮询模式，定时触发 `run`。\n * @param {boolean} [options.pollingWhenHidden=true] 在页面隐藏时，是否继续轮询。如果为 `true`，不会停止轮询。如果为 `false`，在页面隐藏时会暂时停止轮询，页面重新显示时继续上次轮询。默认 `true`。\n * @param {boolean} [options.refreshOnWindowFocus=false] 在屏幕重新获取焦点或重新显示时，是否重新发起请求。如果为 `false`，不会重新发起请求。如果为 `true`，在屏幕重新聚焦或重新显示时，会重新发起请求。默认 `false`。\n * @param {number} [options.focusTimespan=5000] 屏幕重新聚焦，重新发起请求时间间隔。需要配置 `refreshOnWindowFocus` 使用。默认 `5000`。\n * @param {number} [options.debounceInterval] 防抖间隔，单位为毫秒，设置后，请求进入防抖模式。\n * @param {number} [options.throttleInterval] 节流间隔，单位为毫秒，设置后，请求进入节流模式。\n * @returns {Object}\n * @example\n * const { data, error, loading, run, params, refresh, pagination, tableProps } = usePagination(asyncFn, options);\n */\nfunction usePagination<D = any, R extends PaginationAsyncReturn<D> = any>(\n  asyncFn: (...args: PaginationParams) => Promise<R>,\n  options?: PaginationOptions<R>\n) {\n  const {\n    defaultPageSize = 10,\n    refreshDeps = [],\n    defaultParams: defaultParamsProp,\n    autoRun = true,\n    ...restOptions\n  } = options || {};\n\n  const defaultParams = useMemo(\n    () => defaultParamsProp || ([{ current: 1, pageSize: defaultPageSize }] as PaginationParams),\n    [defaultPageSize, defaultParamsProp]\n  );\n\n  const { run, data, params, loading, ...restAsyncReturn } = useAsync<R, PaginationParams>(\n    asyncFn,\n    {\n      defaultParams,\n      autoRun,\n      ...restOptions\n    }\n  );\n\n  const { current, pageSize } = params && params[0] ? params[0] : defaultParams[0];\n\n  const total = data?.total || 0;\n\n  const changePagination = useCallback(\n    (pagination: Partial<PaginationParams[0]>) => {\n      const [oldParams, ...restParams] = params;\n      run.apply(void 0, ([{ ...oldParams, ...pagination }] as any).concat(restParams));\n    },\n    [params, run]\n  );\n\n  const refresh = useCallback(() => {\n    changePagination({ current, pageSize });\n  }, [changePagination, current, pageSize]);\n\n  const onChange = useCallback(\n    (c: number, p: number) => {\n      let toCurrent = c <= 0 ? 1 : c;\n      const toPageSize = p <= 0 ? 1 : p;\n\n      const tempTotalPage = Math.ceil(total / toPageSize);\n      if (toCurrent > tempTotalPage && tempTotalPage > 0) {\n        toCurrent = tempTotalPage;\n      }\n\n      changePagination({\n        current: toCurrent,\n        pageSize: toPageSize\n      });\n    },\n    [changePagination, total]\n  );\n\n  const changeCurrent = useCallback(\n    (c: number) => {\n      onChange(c, pageSize);\n    },\n    [onChange, pageSize]\n  );\n\n  const changePageSize = useCallback(\n    (p: number) => {\n      onChange(current, p);\n    },\n    [current, onChange]\n  );\n\n  const changeTable = useCallback(\n    (\n      pagination: { current?: number; pageSize?: number } & Record<string, any>,\n      filters: any,\n      sorter: any,\n      extra: any\n    ) => {\n      changePagination({\n        current: pagination?.current,\n        pageSize: pagination?.pageSize,\n        filters,\n        sorter,\n        extra\n      });\n    },\n    [changePagination]\n  );\n\n  useUpdateEffect(() => {\n    if (autoRun && isArray(refreshDeps) && refreshDeps.length > 0) {\n      changeCurrent(1);\n    }\n  }, refreshDeps);\n\n  return {\n    ...restAsyncReturn,\n    data,\n    run,\n    refresh,\n    loading,\n    params,\n\n    /**\n     * 分页数据及操作分页的方法。\n     */\n    pagination: {\n      current,\n      pageSize,\n      total,\n      onChange,\n      changeCurrent,\n      changePageSize\n    },\n\n    /**\n     * 适配 antd Table 组件的数据结构，可以直接用在 antd Table 组件上。\n     */\n    tableProps: {\n      dataSource: (data?.list || []) as R['list'],\n      loading,\n      onChange: changeTable,\n      pagination: {\n        total,\n        current,\n        pageSize\n      }\n    }\n  };\n}\n\nexport default usePagination;\n","import { useRef } from 'react';\nimport useMountedRef from '../useMountedRef';\n\n/**\n * 返回上一次的 state 或 props 。\n *\n * @param state 需要记录变化的值。\n * @returns 上一次记录的值。\n * @example\n * const [value, setValue] = useState('');\n * // 上一次 state 的值。\n * const prevValue = usePrevious(value);\n */\nfunction usePrevious<T>(state: T) {\n  const mountedRef = useMountedRef();\n  const prevRef = useRef<T>();\n  const curRef = useRef(state);\n\n  if (mountedRef.current && curRef.current !== state) {\n    prevRef.current = curRef.current;\n    curRef.current = state;\n  }\n\n  return prevRef.current;\n}\n\nexport default usePrevious;\n","import { useState, useCallback } from 'react';\n\ntype SetState<S extends Record<string, any>> = <K extends keyof S>(\n  state: S | Pick<S, K> | null | ((prevState: Readonly<S>) => S | Pick<S, K> | null)\n) => void;\n\n/**\n * 管理 object 类型 state 的 Hook ，用法和 class 组件的 `this.setState` 基本一致，内部使用展开操作符进行合并。\n *\n * @param {Object} initialValue 初始值。\n * @returns\n * @example\n * const [state, setState] = useSetState({\n *   foo: 0,\n *   count: 0,\n *   bar: undefined as string | undefined\n * });\n *\n * // 单独更新某个状态，不影响其他状态值\n * setState({\n *   foo: 1\n * });\n *\n * useEffect(()=>{\n *   console.log(state);\n *   // { foo: 1, count: 0, bar: undefined }\n * }, [state]);\n */\nfunction useSetState<S extends Record<string, any>>(initialValue: S | (() => S)) {\n  const [state, setState] = useState<S>(initialValue);\n\n  const set: SetState<S> = useCallback((nextState) => {\n    setState((prevState) => {\n      const newState = nextState instanceof Function ? nextState(prevState) : nextState;\n      return newState instanceof Object ? { ...prevState, ...newState } : prevState;\n    });\n  }, []);\n\n  return [state, set] as const;\n}\n\nexport default useSetState;\n","import { useState, useEffect } from 'react';\nimport ResizeObserver from './ResizeObserver';\nimport getRef, { RefType } from '../utils/getRef';\nimport useLatest from '../useLatest';\n\n/**\n * 获取并监听 dom 节点的宽高。\n *\n * @param {Object} ref `dom` 节点引用。\n * @returns {Object} 返回 `dom` 节点的宽高。\n * @example\n * const ref = useRef<HTMLDivElement>(null);\n * const size = useSize(ref);\n *\n * return (\n *   <>\n *     <h1 ref={ref}>Hello, world</h1>\n *     <p>rect value: {JSON.stringify(size)}</p>\n *   </>\n * );\n */\nfunction useSize<T extends HTMLElement = HTMLElement>(ref: RefType<T>) {\n  const latestRef = useLatest(ref);\n  const refIsFunc = typeof ref === 'function';\n  const wrapperRef = refIsFunc ? latestRef : ref;\n  const [size, setSize] = useState<{ width?: number; height?: number }>(() => {\n    const target = getRef(ref);\n    return {\n      width: target?.clientWidth,\n      height: target?.clientHeight\n    };\n  });\n\n  useEffect(() => {\n    const target = getRef(refIsFunc ? (wrapperRef as any).current : wrapperRef);\n\n    function refresh(el: HTMLElement | null) {\n      if (el) {\n        setSize({\n          width: el.clientWidth,\n          height: el.clientHeight\n        });\n      }\n    }\n\n    if (!target) {\n      return () => {};\n    }\n\n    refresh(target);\n\n    const observer = new ResizeObserver((mutationsList) => {\n      mutationsList.forEach((mutation) => {\n        refresh(mutation.target);\n      });\n    });\n\n    observer.observe(target);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [wrapperRef, refIsFunc]);\n\n  return size;\n}\n\nexport default useSize;\n","import { useState, useEffect } from 'react';\nimport useThrottleFn from '../useThrottleFn';\n\n/**\n * 用来处理节流值的 Hook。\n *\n * @param {*} value 需要节流的值。\n * @param {number} [wait=0] 节流等待时间，单位为毫秒。默认 `0`。\n * @param {boolean} [immediate=true] 是否在延迟开始前调用。默认 `true`。\n * @returns\n * @example\n * const [value, setValue] = useState('');\n * // 频繁调用 setValue ， throttledValue 每隔 500ms 变化一次。\n * const throttledValue = useThrottle(value, 500);\n */\nfunction useThrottle<ValueType = any>(value: ValueType, wait = 0, immediate = true) {\n  const [state, setState] = useState(value);\n\n  const { run } = useThrottleFn(setState, wait, immediate);\n\n  useEffect(() => {\n    run(value);\n  }, [run, value]);\n\n  return state;\n}\n\nexport default useThrottle;\n","import { useCallback } from 'react';\nimport useSafeState from '../useSafeState';\n\n/**\n * 强制组件重新渲染的 Hook。\n *\n * 内部使用了 `useSafeState`，调用时如果组件已经卸载则不会触发。\n * @returns\n * @example\n * const update = useUpdate();\n */\nconst useUpdate = () => {\n  const [, setState] = useSafeState(0);\n  const update = useCallback(() => {\n    setState((num) => num + 1);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return update;\n};\n\nexport default useUpdate;\n","import { useLayoutEffect, useRef } from 'react';\n\n/**\n * 只在依赖更新时执行的 useLayoutEffect Hook。\n *\n * @param {Function} effect 可执行函数。\n * @param {Array} [deps] 可选项，传入依赖变化的对象。\n * @example\n * const [count, setCount] = useState(0);\n *\n * useUpdateLayoutEffect(() => {\n *   // 初次加载不触发，再更新后触发\n *   // do something\n *\n *   return () => {\n *     // 卸载时触发\n *   };\n * }, [count]);\n */\nconst useUpdateLayoutEffect: typeof useLayoutEffect = (effect, deps) => {\n  const isMounted = useRef(false);\n\n  useLayoutEffect(() => {\n    if (!isMounted.current) {\n      isMounted.current = true;\n    } else {\n      return effect();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useUpdateLayoutEffect;\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__assign","assign","t","s","i","n","arguments","length","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__read","o","m","Symbol","iterator","r","ar","next","done","push","value","error","SuppressedError","nativeUndefined","stringUndefined","objectProtoToString","toString","mathRandom","Math","random","isArray","isObjectLike","getTag","reIsBinary","reIsOctal","reIsBadHex","toNumber","isSymbol","NaN","isObject","Number","trim","isBinary","test","parseInt","slice","isBrowser","window","document","baseDebounce","func","wait","immediate","__throttle__","TypeError","timer","lastCallTime","lastInvokeTime","lastArgs","lastThis","result","defaultValue","invokeFunc","time","debounced","args","_i","Date","now","isInvoke","timeSinceLastCall","shouldInvoke","waitTime","clearTimeout","setTimeout","cancel","flush","pending","debounce","throttle","isWindow","castArray","noop","idCounter","defaultPrefix","substring","useLatest","ref","useRef","current","usePersistFn","fn","persistFn","useCallback","refFn","useUpdateEffect","effect","deps","isMounted","useEffect","EmitterPro","handlers","eventNames","_a","symbols","keys","concat","rawListeners","eventName","handler","map","item","raw","listeners","wrap","hasListener","listener","some","_on","context","dir","currentListener","appendMethod","prependListener","on","_wrapOnce","_this","off","once","prependOnceListener","index","findIndex","splice","offAll","emit","forEach","cache","MemoryStorage","scope","data","getItem","key","setItem","removeItem","clear","isStorageSupported","storage","isSupport","getTime","console","Storage","options","isSupported","needParsed","prefix","memoryScope","getKey","get","reviver","JSON","parse","set","replacer","stringify","del","defaultNamespace","Cache","_super","namespace","opts","ns","max","stdTTL","maxStrategy","checkperiod","cacheKey","startCheckperiod","String","__","constructor","create","__extends","_check","ret","v","_wrap","ttl","currentTtl","_isLimited","len","_getReplaceKey","cacheValues","retkey","defineProperty","enumerable","configurable","setCacheValues","values","mget","getAll","validKeys","replaceKey","mset","keyValueSet","itemSetResult","count","oldData","filter","has","take","getTtl","getLastModified","_checkTimeout","stopCheckperiod","Emitter","AsyncMemo$1","AsyncMemo","promiseCache","run","asyncFn","persisted","Promise","resolve","then","res","catch","err","reject","isDocumentVisible","visibilityState","eventsBinded","addEventListener","revalidate","navigator","onLine","asyncMemo","getCache","Async","async","params","pollingWhenVisibleFlag","pollingTimer","counter","destroyed","cacheTime","pollingWhenHidden","refreshOnWindowFocus","focusTimespan","unsubscribes","init","timespan","pollingInterval","updateDebounce","rePolling","bind","limitRefresh","refresh","subscribeFocus","debounceInterval","throttleInterval","_run","undefined","afterUpdateOptions","prevOptions","nextOptions","updateOptions","formatResult","onSuccess","onError","onFinally","onBefore","fmtRes","finally","destroy","needCancel","resume","useAsync","_b","autoRun","_c","refreshDeps","defaultParams","loadingDelay","__INTERNAL_FORMAT__","_d","defaultLoading","initialData","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","useState","loading","state","loadingDelayTimerRef","asyncFnPersist","onSuccessPersist","onErrorPersist","onFinallyPersist","onBeforePersist","internalFormatRef","handleBefore","handleSuccess","handleError","asyncInstanceRef","AsyncCalss","fmtDefaultParams","mutate","newData","getTarget","target","useScrollToLower","outTarget","threshold","onScrollLower","onScrollLowerPersist","scrollMethod","el","documentElement","scrollHeight","scrollY","scrollTop","getScrollTop","clientHeight","getClientHeight","target_1","removeEventListener","useUnmount","fnRef","useDebounceFn","debounceRun","useThrottleFn","throttleRun","useMountedRef","mountedRef","useUnmountedRef","unmountedRef","useSafeState","initialState","setState","nextState","getRef","transitionKeys","defaultObserverOptions","characterData","childList","attributes","subtree","ResizeObserver","callback","targetNode","onTransitionEnd_","propertyName","throttleRefresh","observe","observer","disconnect","MutationObserver","onClickAway","events","refs","latestRefs","refsIsFunc","every","wrapperRefs","onClickAwayRef","eventsArr","eventsRef","eventsStr","join","event","targetItem","contains","eventList","props","defaultValuePropName","valuePropName","trigger","hasValueProp","handleSetState","list","defaultLimited","limitedRef","safeList","useMemo","safeCount","ceil","canLimit","setData","limited","toggle","isNoMore","restOptions","dataGroup","currentPageRef","_params","reqCancel","reqMutate","restAsyncReturn","noMore","firstParams","restParams","loadData","loadMore","param","loadingMore","defaultPageSize","defaultParamsProp","pageSize","total","changePagination","pagination","oldParams","onChange","c","toCurrent","toPageSize","tempTotalPage","changeCurrent","changePageSize","changeTable","filters","sorter","extra","tableProps","dataSource","prevRef","curRef","initialValue","prevState","newState","Function","latestRef","refIsFunc","wrapperRef","width","clientWidth","height","size","setSize","mutationsList","mutation","num","useLayoutEffect"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,21,22,23]}