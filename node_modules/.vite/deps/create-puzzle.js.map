{
  "version": 3,
  "sources": ["../../create-puzzle/dist/createPuzzle.esm.js"],
  "sourcesContent": ["import { AsyncMemo, loadImageWithBlob } from 'util-helpers';\nimport { randomInt, isObject, uniqueId } from 'ut2';\n\nvar mathPI = Math.PI;\n// 拼图点\nvar Point;\n(function (Point) {\n    Point[Point[\"None\"] = 0] = \"None\";\n    Point[Point[\"Outer\"] = 1] = \"Outer\";\n    Point[Point[\"Inner\"] = 2] = \"Inner\";\n})(Point || (Point = {}));\nvar pointArray = [Point.None, Point.Outer, Point.Inner];\n// 随机选择数组中的某一项\nfunction pick(arr) {\n    var len = arr.length;\n    var randomIndex = randomInt(0, len - 1);\n    return arr[randomIndex];\n}\n// 获取随机拼图点\nfunction getRandomPoints(pointNum) {\n    var points = {\n        top: pick(pointArray),\n        right: pick(pointArray),\n        bottom: pick(pointArray),\n        left: pick(pointArray),\n    };\n    var pointsKeys = Object.keys(points);\n    var verticalDirs = ['top', 'bottom'];\n    var horizontalDirs = ['left', 'right'];\n    // 保证上下 和 左右 都必须有一个外部的拼图点\n    if (points.top === Point.Outer && points.bottom === Point.Outer) {\n        points[pick(verticalDirs)] = Point.Inner;\n    }\n    else if (points.top !== Point.Outer && points.bottom !== Point.Outer) {\n        points[pick(verticalDirs)] = Point.Outer;\n    }\n    if (points.left === Point.Outer && points.right === Point.Outer) {\n        points[pick(horizontalDirs)] = Point.Inner;\n    }\n    else if (points.left !== Point.Outer && points.right !== Point.Outer) {\n        points[pick(horizontalDirs)] = Point.Outer;\n    }\n    if (pointNum) {\n        var inners_1 = [];\n        var nones_1 = [];\n        pointsKeys.forEach(function (item) {\n            if (points[item] === Point.Inner) {\n                inners_1.push(item);\n            }\n            else if (points[item] === Point.None) {\n                nones_1.push(item);\n            }\n        });\n        if (pointNum === 2) {\n            inners_1.forEach(function (item) { return (points[item] = Point.None); });\n        }\n        else if (pointNum === 3) {\n            if (inners_1.length === 0) {\n                points[pick(nones_1)] = Point.Inner;\n            }\n            else if (inners_1.length === 2) {\n                points[pick(inners_1)] = Point.None;\n            }\n        }\n        else if (pointNum == 4) {\n            nones_1.forEach(function (item) { return (points[item] = Point.Inner); });\n        }\n    }\n    return points;\n}\n// 画拼图\nfunction drawPuzzle(ctx, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.x, x = _a === void 0 ? 0 : _a, _b = options.y, y = _b === void 0 ? 0 : _b, _c = options.w, w = _c === void 0 ? 60 : _c, _d = options.h, h = _d === void 0 ? 60 : _d, _e = options.needClosePath, needClosePath = _e === void 0 ? true : _e;\n    var points = options.points, _f = options.margin, margin = _f === void 0 ? 0 : _f;\n    margin = margin <= 0 ? 0 : margin;\n    if (typeof points === 'number' || !points) {\n        points = getRandomPoints(points);\n    }\n    var r = (Math.min(w, h) - margin * 2) * 0.15; // 适合拼图点的比例 0.15\n    var l = Math.hypot(r, r); // 斜边长度\n    var l1_2 = l / 2; // 斜边长度一半，45度角直角三角形，邻边相等\n    var c2r = r + l1_2; // 圆直径\n    var rect = {\n        x: x + margin,\n        y: y + margin,\n        w: w - c2r - margin * 2,\n        h: h - c2r - margin * 2,\n    };\n    var w1_2 = rect.w / 2; // 矩形一半宽度\n    var h1_2 = rect.h / 2; // 矩形一半高度\n    if (points.left === Point.Outer) {\n        rect.x += c2r;\n    }\n    if (points.top === Point.Outer) {\n        rect.y += c2r;\n    }\n    // draw start\n    ctx.beginPath();\n    ctx.lineWidth = 2;\n    // top\n    ctx.moveTo(rect.x, rect.y);\n    if (points.top !== Point.None) {\n        ctx.lineTo(rect.x + w1_2 - l1_2, rect.y);\n        if (points.top === Point.Inner) {\n            ctx.arc(rect.x + w1_2, rect.y + l1_2, r, 1.25 * mathPI, 1.75 * mathPI, true);\n        }\n        else {\n            ctx.arc(rect.x + w1_2, rect.y - l1_2, r, 0.75 * mathPI, 0.25 * mathPI);\n        }\n    }\n    ctx.lineTo(rect.x + rect.w, rect.y);\n    // right\n    if (points.right !== Point.None) {\n        ctx.lineTo(rect.x + rect.w, rect.y + h1_2 - l1_2);\n        if (points.right === Point.Inner) {\n            ctx.arc(rect.x + rect.w - l1_2, rect.y + h1_2, r, 1.75 * mathPI, 0.25 * mathPI, true);\n        }\n        else {\n            ctx.arc(rect.x + rect.w + l1_2, rect.y + h1_2, r, 1.25 * mathPI, 0.75 * mathPI);\n        }\n    }\n    ctx.lineTo(rect.x + rect.w, rect.y + rect.h);\n    // bottom\n    if (points.bottom !== Point.None) {\n        ctx.lineTo(rect.x + w1_2 + l1_2, rect.y + rect.h);\n        if (points.bottom === Point.Inner) {\n            ctx.arc(rect.x + w1_2, rect.y + rect.h - l1_2, r, 0.25 * mathPI, 0.75 * mathPI, true);\n        }\n        else {\n            ctx.arc(rect.x + w1_2, rect.y + rect.h + l1_2, r, 1.75 * mathPI, 1.25 * mathPI);\n        }\n    }\n    ctx.lineTo(rect.x, rect.y + rect.h);\n    // left\n    if (points.left !== Point.None) {\n        ctx.lineTo(rect.x, rect.y + h1_2 + l1_2);\n        if (points.left === Point.Inner) {\n            ctx.arc(rect.x + l1_2, rect.y + h1_2, r, 0.75 * mathPI, 1.25 * mathPI, true);\n        }\n        else {\n            ctx.arc(rect.x - l1_2, rect.y + h1_2, r, 0.25 * mathPI, 1.75 * mathPI);\n        }\n    }\n    ctx.lineTo(rect.x, rect.y);\n    ctx.stroke();\n    needClosePath && ctx.closePath();\n    // ctx.fillStyle = \"red\";\n    // ctx.fill();\n    // ctx.strokeRect(x, y, w, h);\n}\nfunction canvasToImage(canvas, formatBlob, type, quality) {\n    return new Promise(function (resolve) {\n        if (formatBlob) {\n            canvas.toBlob(function (blob) {\n                if (blob) {\n                    resolve(URL.createObjectURL(blob));\n                }\n                else {\n                    resolve(canvas.toDataURL(type, quality));\n                }\n            }, type, quality);\n        }\n        else {\n            resolve(canvas.toDataURL(type, quality));\n        }\n    });\n}\n\nvar asyncMemo = new AsyncMemo({ max: 5, maxStrategy: 'replaced' });\nasyncMemo.cache.on('del', function (k, v) {\n    try {\n        if (v.image.src) {\n            URL.revokeObjectURL(v.image.src);\n        }\n    }\n    catch (err) {\n        /* empty */\n    }\n});\nfunction clearCache(key) {\n    if (key) {\n        asyncMemo.cache.del(key);\n    }\n    else {\n        asyncMemo.cache.clear();\n    }\n}\nvar wm = new WeakMap();\nvar getCacheKey = function (obj) {\n    if (!isObject(obj)) {\n        return String(obj);\n    }\n    if (!wm.get(obj)) {\n        wm.set(obj, uniqueId('cp'));\n    }\n    return wm.get(obj);\n};\nvar MimeType = {\n    jpeg: 'image/jpeg',\n    png: 'image/png',\n};\n// 缓存之前的 blob url\nvar previousBlobUrlCache = [];\nfunction revokeBlobUrls(blobUrls) {\n    blobUrls.forEach(function (item) {\n        URL.revokeObjectURL(item);\n    });\n}\n// 创建拼图和背景图\nfunction createPuzzle(imgUrl, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.borderWidth, borderWidth = _a === void 0 ? 2 : _a, _b = options.borderColor, borderColor = _b === void 0 ? 'rgba(255,255,255,0.7)' : _b, _c = options.fillColor, fillColor = _c === void 0 ? 'rgba(255,255,255,0.7)' : _c, outPoints = options.points, _d = options.width, width = _d === void 0 ? 60 : _d, _e = options.height, height = _e === void 0 ? 60 : _e, outX = options.x, outY = options.y, _f = options.margin, margin = _f === void 0 ? 2 : _f, _g = options.equalHeight, equalHeight = _g === void 0 ? true : _g, imageWidth = options.imageWidth, imageHeight = options.imageHeight, outBgWidth = options.bgWidth, outBgHeight = options.bgHeight, _h = options.bgOffset, outBgOffset = _h === void 0 ? [0, 0] : _h, _j = options.bgImageType, bgImageType = _j === void 0 ? MimeType.jpeg : _j, _k = options.quality, quality = _k === void 0 ? 0.8 : _k, _l = options.format, format = _l === void 0 ? 'dataURL' : _l, _m = options.cacheImage, cacheImage = _m === void 0 ? true : _m, _o = options.autoRevokePreviousBlobUrl, autoRevokePreviousBlobUrl = _o === void 0 ? true : _o, ajaxOptions = options.ajaxOptions;\n    return new Promise(function (resolve, reject) {\n        var bgCanvas = document.createElement('canvas');\n        var puzzleCanvas = document.createElement('canvas');\n        var bgCtx = bgCanvas.getContext('2d');\n        var puzzleCtx = puzzleCanvas.getContext('2d');\n        var cacheKey = cacheImage ? getCacheKey(imgUrl) : undefined;\n        asyncMemo\n            .run(function () { return loadImageWithBlob(imgUrl, ajaxOptions); }, cacheKey)\n            .then(function (_a) {\n            var img = _a.image;\n            if (imageWidth) {\n                img.width = imageWidth;\n            }\n            if (imageHeight) {\n                img.height = imageHeight;\n            }\n            var bgWidth = typeof outBgWidth === 'number' && outBgWidth > 0\n                ? outBgWidth > width\n                    ? outBgWidth\n                    : width\n                : img.width;\n            var bgHeight = typeof outBgHeight === 'number' && outBgHeight > 0\n                ? outBgHeight > height\n                    ? outBgHeight\n                    : height\n                : img.height;\n            bgCanvas.width = bgWidth;\n            bgCanvas.height = bgHeight;\n            var maxOffsetX = bgWidth - width;\n            var maxOffsetY = bgHeight - height;\n            var x = typeof outX === 'undefined' ? randomInt(width, maxOffsetX) : outX || 0;\n            var y = typeof outY === 'undefined' ? randomInt(0, maxOffsetY) : outY || 0;\n            if (x < 0) {\n                x = 0;\n            }\n            else if (x > maxOffsetX) {\n                x = maxOffsetX;\n            }\n            if (y < 0) {\n                y = 0;\n            }\n            else if (y > maxOffsetY) {\n                y = maxOffsetY;\n            }\n            var points = typeof outPoints === 'number' || !outPoints ? getRandomPoints(outPoints) : outPoints;\n            var bgOffset = typeof outBgOffset === 'function' ? outBgOffset(img.width, img.height) : outBgOffset;\n            // 背景图\n            bgCtx.strokeStyle = borderColor;\n            bgCtx.lineWidth = borderWidth;\n            bgCtx.fillStyle = fillColor;\n            drawPuzzle(bgCtx, { x: x, y: y, w: width, h: height, points: points, margin: margin });\n            bgCtx.fillStyle = fillColor;\n            bgCtx.fill();\n            bgCtx.globalCompositeOperation = 'destination-over';\n            bgCtx.drawImage(img, bgOffset[0], bgOffset[1], img.width, img.height);\n            puzzleCanvas.width = bgWidth;\n            puzzleCanvas.height = bgHeight;\n            // 拼图\n            puzzleCtx.strokeStyle = borderColor;\n            puzzleCtx.lineWidth = borderWidth;\n            drawPuzzle(puzzleCtx, { x: x, y: y, w: width, h: height, points: points, margin: margin });\n            puzzleCtx.globalCompositeOperation = 'destination-over';\n            puzzleCtx.clip();\n            puzzleCtx.drawImage(img, bgOffset[0], bgOffset[1], img.width, img.height);\n            // restore image\n            var imgData = puzzleCtx.getImageData(x, y, width, height);\n            puzzleCtx.clearRect(0, 0, bgWidth, bgHeight);\n            puzzleCanvas.width = width;\n            puzzleCanvas.height = equalHeight ? bgHeight : height;\n            puzzleCtx.putImageData(imgData, 0, equalHeight ? y : 0);\n            var formatBlob = format === 'blob';\n            var puzzlePromise = canvasToImage(puzzleCanvas, formatBlob, MimeType.png, quality);\n            var bgPromise = canvasToImage(bgCanvas, formatBlob, bgImageType, quality);\n            Promise.all([puzzlePromise, bgPromise])\n                .then(function (_a) {\n                var puzzleUrl = _a[0], bgUrl = _a[1];\n                if (autoRevokePreviousBlobUrl) {\n                    if (previousBlobUrlCache.length) {\n                        revokeBlobUrls(previousBlobUrlCache);\n                        previousBlobUrlCache.length = 0;\n                    }\n                    if (formatBlob) {\n                        previousBlobUrlCache.push(bgUrl, puzzleUrl);\n                    }\n                }\n                resolve({\n                    puzzleUrl: puzzleUrl,\n                    bgUrl: bgUrl,\n                    x: x,\n                    y: equalHeight ? 0 : y,\n                });\n            })\n                .catch(reject);\n        })\n            .catch(reject);\n    });\n}\n\nexport { Point, clearCache, createPuzzle, createPuzzle as default, drawPuzzle, getRandomPoints };\n"],
  "mappings": "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",
  "names": ["Point", "_a"]
}
